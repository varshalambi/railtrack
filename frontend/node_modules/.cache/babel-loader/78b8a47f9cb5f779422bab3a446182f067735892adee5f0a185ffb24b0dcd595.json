{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/ManageRepresentatives.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageRepresentatives = () => {\n  _s();\n  const [representatives, setRepresentatives] = useState([]);\n  const [newRep, setNewRep] = useState({\n    ssn: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    employeeType: \"Staff\"\n  });\n  const [editRep, setEditRep] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  // Fetch all representatives\n  useEffect(() => {\n    const fetchRepresentatives = async () => {\n      try {\n        const response = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(response.data.employees || []);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch representatives.\");\n      }\n    };\n    fetchRepresentatives();\n  }, []);\n\n  // Handle input changes for adding/editing\n  const handleInputChange = (e, isEdit = false) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEdit) {\n      setEditRep(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewRep(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle add representative\n  const handleAddRep = async () => {\n    try {\n      const trimmedRep = {\n        ssn: newRep.ssn.trim(),\n        firstName: newRep.firstName.trim(),\n        lastName: newRep.lastName.trim(),\n        username: newRep.username.trim(),\n        password: newRep.password.trim(),\n        employeeType: newRep.employeeType // Either 'Admin' or 'Staff'\n      };\n\n      // Validate required fields\n      if (!trimmedRep.ssn || !trimmedRep.firstName || !trimmedRep.lastName || !trimmedRep.username || !trimmedRep.password) {\n        setError(\"All fields are required.\");\n        return;\n      }\n\n      // Make API request\n      const response = await axiosInstance.post(\"/admin/employees\", trimmedRep);\n\n      // Append the new employee to the state\n      setRepresentatives(prev => [...prev, {\n        EmpID: response.data.empId,\n        FirstName: trimmedRep.firstName,\n        LastName: trimmedRep.lastName,\n        Username: trimmedRep.username,\n        EmployeeType: trimmedRep.employeeType\n      }]);\n\n      // Reset the form and clear messages\n      setNewRep({\n        ssn: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n        employeeType: \"Staff\" // Default to 'Staff'\n      });\n      setSuccess(\"Representative added successfully.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to add representative.\");\n    }\n  };\n\n  // Edit a representative\n  const handleEditRep = async () => {\n    var _editRep$ssn, _editRep$firstName, _editRep$lastName, _editRep$username, _editRep$password, _editRep$employeeType;\n    if (!(editRep !== null && editRep !== void 0 && (_editRep$ssn = editRep.ssn) !== null && _editRep$ssn !== void 0 && _editRep$ssn.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$firstName = editRep.firstName) !== null && _editRep$firstName !== void 0 && _editRep$firstName.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$lastName = editRep.lastName) !== null && _editRep$lastName !== void 0 && _editRep$lastName.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$username = editRep.username) !== null && _editRep$username !== void 0 && _editRep$username.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$password = editRep.password) !== null && _editRep$password !== void 0 && _editRep$password.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$employeeType = editRep.employeeType) !== null && _editRep$employeeType !== void 0 && _editRep$employeeType.trim())) {\n      setError(\"All fields are required.\");\n      return;\n    }\n    try {\n      var _response$data;\n      // API call to update representative\n      const response = await axiosInstance.put(`/admin/employees/${editRep.EmpID}`, {\n        ssn: editRep.ssn,\n        firstName: editRep.firstName,\n        lastName: editRep.lastName,\n        username: editRep.username,\n        password: editRep.password,\n        employeeType: editRep.employeeType\n      });\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) === \"Employee updated successfully\") {\n        // Fetch updated representatives list after successful API call\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n        setEditRep(null); // Close the edit form\n        setSuccess(\"Representative updated successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating representative:\", err);\n      setError(\"Failed to update representative.\");\n    }\n  };\n\n  // Delete a representative\n  const handleDeleteRep = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this representative?\")) return;\n    try {\n      var _response$data2;\n      // API call to delete the representative\n      const response = await axiosInstance.delete(`/admin/employees/${id}`);\n      if ((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message) === \"Employee deleted successfully\") {\n        // Re-fetch the updated representatives list after deletion\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n        setSuccess(\"Representative deleted successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting representative:\", err);\n      setError(\"Failed to delete representative.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Customer Representatives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: representatives.map(rep => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: rep.EmpID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rep.FirstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rep.LastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rep.Username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"*\".repeat(rep.Password.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"*\".repeat(rep.SSN.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rep.EmployeeType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditRep({\n                ...rep\n              }),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteRep(rep.EmpID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, rep.EmpID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this), editRep && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Representative\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ssn\",\n        value: editRep.ssn,\n        placeholder: \"SSN\",\n        onChange: e => handleInputChange(e, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: editRep.firstName,\n        placeholder: \"First Name\",\n        onChange: e => handleInputChange(e, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: editRep.lastName,\n        placeholder: \"Last Name\",\n        onChange: e => handleInputChange(e, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: editRep.username,\n        placeholder: \"Username\",\n        onChange: e => handleInputChange(e, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: editRep.password,\n        placeholder: \"Password\",\n        onChange: e => handleInputChange(e, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"employeeType\",\n        value: editRep.employeeType,\n        onChange: e => handleInputChange(e, true),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Staff\",\n          children: \"Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditRep,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditRep(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Representative\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleAddRep();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ssn\",\n        value: newRep.ssn,\n        placeholder: \"SSN\",\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: newRep.firstName,\n        placeholder: \"First Name\",\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: newRep.lastName,\n        placeholder: \"Last Name\",\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: newRep.username,\n        placeholder: \"Username\",\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: newRep.password,\n        placeholder: \"Password\",\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"employeeType\",\n        value: newRep.employeeType,\n        onChange: e => handleInputChange(e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Staff\",\n          children: \"Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageRepresentatives, \"m8gLOr9MaXUVCaNiur3Twj3TYZM=\");\n_c = ManageRepresentatives;\nexport default ManageRepresentatives;\nvar _c;\n$RefreshReg$(_c, \"ManageRepresentatives\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","ManageRepresentatives","_s","representatives","setRepresentatives","newRep","setNewRep","ssn","firstName","lastName","username","password","employeeType","editRep","setEditRep","error","setError","success","setSuccess","fetchRepresentatives","response","get","data","employees","err","console","handleInputChange","e","isEdit","name","value","target","prev","handleAddRep","trimmedRep","trim","post","EmpID","empId","FirstName","LastName","Username","EmployeeType","handleEditRep","_editRep$ssn","_editRep$firstName","_editRep$lastName","_editRep$username","_editRep$password","_editRep$employeeType","_response$data","put","message","updatedResponse","Error","handleDeleteRep","id","window","confirm","_response$data2","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","rep","repeat","Password","length","SSN","onClick","type","placeholder","onChange","onSubmit","preventDefault","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/ManageRepresentatives.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\n\nconst ManageRepresentatives = () => {\n  const [representatives, setRepresentatives] = useState([]);\n  const [newRep, setNewRep] = useState({\n    ssn: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    employeeType: \"Staff\",\n  });\n  const [editRep, setEditRep] = useState(null);\n  \n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  // Fetch all representatives\n  useEffect(() => {\n    const fetchRepresentatives = async () => {\n      try {\n        const response = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(response.data.employees || []);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch representatives.\");\n      }\n    };\n    fetchRepresentatives();\n  }, []);\n\n  // Handle input changes for adding/editing\n  const handleInputChange = (e, isEdit = false) => {\n    const { name, value } = e.target;\n    if (isEdit) {\n      setEditRep((prev) => ({ ...prev, [name]: value }));\n    } else {\n      setNewRep((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  // Handle add representative\n  const handleAddRep = async () => {\n    try {\n      const trimmedRep = {\n        ssn: newRep.ssn.trim(),\n        firstName: newRep.firstName.trim(),\n        lastName: newRep.lastName.trim(),\n        username: newRep.username.trim(),\n        password: newRep.password.trim(),\n        employeeType: newRep.employeeType, // Either 'Admin' or 'Staff'\n      };\n  \n      // Validate required fields\n      if (\n        !trimmedRep.ssn ||\n        !trimmedRep.firstName ||\n        !trimmedRep.lastName ||\n        !trimmedRep.username ||\n        !trimmedRep.password\n      ) {\n        setError(\"All fields are required.\");\n        return;\n      }\n  \n      // Make API request\n      const response = await axiosInstance.post(\"/admin/employees\", trimmedRep);\n  \n      // Append the new employee to the state\n      setRepresentatives((prev) => [\n        ...prev,\n        {\n          EmpID: response.data.empId,\n          FirstName: trimmedRep.firstName,\n          LastName: trimmedRep.lastName,\n          Username: trimmedRep.username,\n          EmployeeType: trimmedRep.employeeType,\n        },\n      ]);\n  \n      // Reset the form and clear messages\n      setNewRep({\n        ssn: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n        employeeType: \"Staff\", // Default to 'Staff'\n      });\n      setSuccess(\"Representative added successfully.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to add representative.\");\n    }\n  };\n  \n\n  // Edit a representative\n  const handleEditRep = async () => {\n    if (\n      !editRep?.ssn?.trim() ||\n      !editRep?.firstName?.trim() ||\n      !editRep?.lastName?.trim() ||\n      !editRep?.username?.trim() ||\n      !editRep?.password?.trim() ||\n      !editRep?.employeeType?.trim()\n    ) {\n      setError(\"All fields are required.\");\n      return;\n    }\n  \n    try {\n      // API call to update representative\n      const response = await axiosInstance.put(`/admin/employees/${editRep.EmpID}`, {\n        ssn: editRep.ssn,\n        firstName: editRep.firstName,\n        lastName: editRep.lastName,\n        username: editRep.username,\n        password: editRep.password,\n        employeeType: editRep.employeeType,\n      });\n  \n      if (response?.data?.message === \"Employee updated successfully\") {\n        // Fetch updated representatives list after successful API call\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n  \n        setEditRep(null); // Close the edit form\n        setSuccess(\"Representative updated successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating representative:\", err);\n      setError(\"Failed to update representative.\");\n    }\n  };\n  \n  \n  \n  // Delete a representative\n  const handleDeleteRep = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this representative?\")) return;\n  \n    try {\n      // API call to delete the representative\n      const response = await axiosInstance.delete(`/admin/employees/${id}`);\n  \n      if (response?.data?.message === \"Employee deleted successfully\") {\n        // Re-fetch the updated representatives list after deletion\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n  \n        setSuccess(\"Representative deleted successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting representative:\", err);\n      setError(\"Failed to delete representative.\");\n    }\n  };\n  \n\n  return (\n    <div>\n      <h1>Manage Customer Representatives</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\n\n    <table>\n        <thead>\n            <tr>\n            <th>ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n            <th>Password</th>\n            <th>SSN</th>\n            <th>Role</th>\n            <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            {representatives.map((rep) => (\n            <tr key={rep.EmpID}>\n                <td>{rep.EmpID}</td>\n                <td>{rep.FirstName}</td>\n                <td>{rep.LastName}</td>\n                <td>{rep.Username}</td>\n                <td>{\"*\".repeat(rep.Password.length)}</td>\n                <td>{\"*\".repeat(rep.SSN.length)}</td>\n                <td>{rep.EmployeeType}</td>\n                <td>\n                <button onClick={() => setEditRep({ ...rep })}>Edit</button>\n                <button onClick={() => handleDeleteRep(rep.EmpID)}>Delete</button>\n                </td>\n            </tr>\n            ))}\n        </tbody>\n    </table>   \n\n    {editRep && (\n  <div>\n    <h2>Edit Representative</h2>\n    <input\n      type=\"text\"\n      name=\"ssn\"\n      value={editRep.ssn}\n      placeholder=\"SSN\"\n      onChange={(e) => handleInputChange(e, true)}\n    />\n    <input\n      type=\"text\"\n      name=\"firstName\"\n      value={editRep.firstName}\n      placeholder=\"First Name\"\n      onChange={(e) => handleInputChange(e, true)}\n    />\n    <input\n      type=\"text\"\n      name=\"lastName\"\n      value={editRep.lastName}\n      placeholder=\"Last Name\"\n      onChange={(e) => handleInputChange(e, true)}\n    />\n    <input\n      type=\"text\"\n      name=\"username\"\n      value={editRep.username}\n      placeholder=\"Username\"\n      onChange={(e) => handleInputChange(e, true)}\n    />\n    <input\n      type=\"password\"\n      name=\"password\"\n      value={editRep.password}\n      placeholder=\"Password\"\n      onChange={(e) => handleInputChange(e, true)}\n    />\n    <select\n      name=\"employeeType\"\n      value={editRep.employeeType}\n      onChange={(e) => handleInputChange(e, true)}\n    >\n      <option value=\"Admin\">Admin</option>\n      <option value=\"Staff\">Staff</option>\n    </select>\n    <button onClick={handleEditRep}>Update</button>\n    <button onClick={() => setEditRep(null)}>Cancel</button>\n  </div>\n)}\n\n<h2>Add New Representative</h2>\n<form\n  onSubmit={(e) => {\n    e.preventDefault();\n    handleAddRep();\n  }}\n>\n  <input\n    type=\"text\"\n    name=\"ssn\"\n    value={newRep.ssn}\n    placeholder=\"SSN\"\n    onChange={(e) => handleInputChange(e)}\n  />\n  <input\n    type=\"text\"\n    name=\"firstName\"\n    value={newRep.firstName}\n    placeholder=\"First Name\"\n    onChange={(e) => handleInputChange(e)}\n  />\n  <input\n    type=\"text\"\n    name=\"lastName\"\n    value={newRep.lastName}\n    placeholder=\"Last Name\"\n    onChange={(e) => handleInputChange(e)}\n  />\n  <input\n    type=\"text\"\n    name=\"username\"\n    value={newRep.username}\n    placeholder=\"Username\"\n    onChange={(e) => handleInputChange(e)}\n  />\n  <input\n    type=\"password\"\n    name=\"password\"\n    value={newRep.password}\n    placeholder=\"Password\"\n    onChange={(e) => handleInputChange(e)}\n  />\n  <select\n    name=\"employeeType\"\n    value={newRep.employeeType}\n    onChange={(e) => handleInputChange(e)}\n  >\n    <option value=\"Staff\">Staff</option>\n    <option value=\"Admin\">Admin</option>\n  </select>\n  <button type=\"submit\">Add</button>\n</form>\n\n    </div>\n  );\n};\n\nexport default ManageRepresentatives;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}