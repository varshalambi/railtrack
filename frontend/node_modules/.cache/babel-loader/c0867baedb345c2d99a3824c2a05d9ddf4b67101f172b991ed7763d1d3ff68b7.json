{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/ManageSchedulesTab.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const ManageSchedulesTab = () => {\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState('');\n//   const [editMode, setEditMode] = useState(null);\n//   const [formValues, setFormValues] = useState({});\n\n//   // Fetch schedules on component mount\n//   useEffect(() => {\n//     fetchSchedules();\n//   }, []);\n\n//   // Function to fetch train schedules\n//   const fetchSchedules = async () => {\n//     try {\n//       const response = await axiosInstance.get('/representative/schedules');\n//       setSchedules(response.data.schedules);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching schedules:', err);\n//       setError('Failed to fetch schedules.');\n//     }\n//   };\n\n//   // Handle delete schedule\n//   const deleteSchedule = async (scheduleId) => {\n//     try {\n//       await axiosInstance.delete(`/representative/schedules/${scheduleId}`);\n//       setSchedules(schedules.filter((s) => s.ScheduleID !== scheduleId));\n//     } catch (err) {\n//       console.error('Error deleting schedule:', err);\n//       setError('Failed to delete schedule.');\n//     }\n//   };\n\n//   // Handle edit schedule\n//   const editSchedule = (schedule) => {\n//     setEditMode(schedule.ScheduleID);\n//     setFormValues({\n//       TransitLineName: schedule.TransitLineName,\n//       DepartureDateTime: schedule.DepartureDateTime,\n//       ArrivalDateTime: schedule.ArrivalDateTime,\n//       TravelTime: schedule.TravelTime,\n//     });\n//   };\n\n//   // Handle form input changes\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormValues({ ...formValues, [name]: value });\n//   };\n\n//   // Handle save edited schedule\n//   const saveSchedule = async (scheduleId) => {\n//     try {\n//       await axiosInstance.put(`/representative/schedules/${scheduleId}`, formValues);\n//       setEditMode(null);\n//       fetchSchedules();\n//     } catch (err) {\n//       console.error('Error updating schedule:', err);\n//       setError('Failed to update schedule.');\n//     }\n//   };\n\n//   // Render\n//   return (\n//     <div>\n//       <h2>Manage Schedules</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Schedule ID</th>\n//             <th>Transit Line</th>\n//             <th>Departure Time</th>\n//             <th>Arrival Time</th>\n//             <th>Travel Time</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {schedules.map((schedule) => (\n//             <tr key={schedule.ScheduleID}>\n//               <td>{schedule.ScheduleID}</td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"text\"\n//                     name=\"TransitLineName\"\n//                     value={formValues.TransitLineName}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   schedule.TransitLineName\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"datetime-local\"\n//                     name=\"DepartureDateTime\"\n//                     value={formValues.DepartureDateTime}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   new Date(schedule.DepartureDateTime).toLocaleString()\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"datetime-local\"\n//                     name=\"ArrivalDateTime\"\n//                     value={formValues.ArrivalDateTime}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   new Date(schedule.ArrivalDateTime).toLocaleString()\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"time\"\n//                     name=\"TravelTime\"\n//                     value={formValues.TravelTime}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   schedule.TravelTime\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <>\n//                     <button onClick={() => saveSchedule(schedule.ScheduleID)}>Save</button>\n//                     <button onClick={() => setEditMode(null)}>Cancel</button>\n//                   </>\n//                 ) : (\n//                   <>\n//                     <button onClick={() => editSchedule(schedule)}>Edit</button>\n//                     <button onClick={() => deleteSchedule(schedule.ScheduleID)}>Delete</button>\n//                   </>\n//                 )}\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ManageSchedulesTab;\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageSchedulesTab = () => {\n  _s();\n  const [schedules, setSchedules] = useState([]);\n  const [newSchedule, setNewSchedule] = useState({\n    transitLineName: '',\n    travelTime: '',\n    arrivalDateTime: '',\n    departureDateTime: '',\n    trainId: ''\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchSchedules();\n  }, []);\n  const fetchSchedules = async () => {\n    try {\n      const response = await axiosInstance.get('/api/customer-rep/train-schedules');\n      setSchedules(response.data.schedules);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching schedules:', err);\n      setError('Failed to fetch schedules.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewSchedule(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const addSchedule = async () => {\n    try {\n      await axiosInstance.post('customer-rep/train-schedules', newSchedule);\n      fetchSchedules(); // Refresh the list after adding a new schedule\n    } catch (err) {\n      console.error('Error adding schedule:', err);\n      setError('Failed to add new schedule.');\n    }\n  };\n  const editSchedule = async scheduleId => {\n    try {\n      const updatedSchedule = schedules.find(s => s.ScheduleID === scheduleId);\n      await axiosInstance.put(`/api/customer-rep/train-schedules/${scheduleId}`, updatedSchedule);\n      fetchSchedules(); // Refresh the list after editing\n    } catch (err) {\n      console.error('Error editing schedule:', err);\n      setError('Failed to edit schedule.');\n    }\n  };\n  const deleteSchedule = async scheduleId => {\n    try {\n      await axiosInstance.delete(`/api/customer-rep/train-schedules/${scheduleId}`);\n      fetchSchedules(); // Refresh the list after deleting\n    } catch (err) {\n      console.error('Error deleting schedule:', err);\n      setError('Failed to delete schedule.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Train Schedules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transitLineName\",\n        placeholder: \"Transit Line Name\",\n        value: newSchedule.transitLineName,\n        onChange: handleInputChange,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"travelTime\",\n        placeholder: \"Travel Time\",\n        value: newSchedule.travelTime,\n        onChange: handleInputChange,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"arrivalDateTime\",\n        placeholder: \"Arrival DateTime\",\n        value: newSchedule.arrivalDateTime,\n        onChange: handleInputChange,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"departureDateTime\",\n        placeholder: \"Departure DateTime\",\n        value: newSchedule.departureDateTime,\n        onChange: handleInputChange,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"trainId\",\n        placeholder: \"Train ID\",\n        value: newSchedule.trainId,\n        onChange: handleInputChange,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSchedule,\n        children: \"Add Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Schedule ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transit Line Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Travel Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arrival DateTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure DateTime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Train ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: schedules.map(schedule => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: schedule.ScheduleID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: schedule.TransitLineName,\n              onChange: e => setSchedules(prev => prev.map(s => s.ScheduleID === schedule.ScheduleID ? {\n                ...s,\n                TransitLineName: e.target.value\n              } : s))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: schedule.TravelTime,\n              onChange: e => setSchedules(prev => prev.map(s => s.ScheduleID === schedule.ScheduleID ? {\n                ...s,\n                TravelTime: e.target.value\n              } : s))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: schedule.ArrivalDateTime,\n              onChange: e => setSchedules(prev => prev.map(s => s.ScheduleID === schedule.ScheduleID ? {\n                ...s,\n                ArrivalDateTime: e.target.value\n              } : s))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: schedule.DepartureDateTime,\n              onChange: e => setSchedules(prev => prev.map(s => s.ScheduleID === schedule.ScheduleID ? {\n                ...s,\n                DepartureDateTime: e.target.value\n              } : s))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: schedule.TrainID,\n              onChange: e => setSchedules(prev => prev.map(s => s.ScheduleID === schedule.ScheduleID ? {\n                ...s,\n                TrainID: e.target.value\n              } : s))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editSchedule(schedule.ScheduleID),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteSchedule(schedule.ScheduleID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, schedule.ScheduleID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageSchedulesTab, \"HeHbFveCUlclE+nnvs2tfUPrl40=\");\n_c = ManageSchedulesTab;\nexport default ManageSchedulesTab;\nvar _c;\n$RefreshReg$(_c, \"ManageSchedulesTab\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","ManageSchedulesTab","_s","schedules","setSchedules","newSchedule","setNewSchedule","transitLineName","travelTime","arrivalDateTime","departureDateTime","trainId","error","setError","fetchSchedules","response","get","data","err","console","handleInputChange","e","name","value","target","prev","addSchedule","post","editSchedule","scheduleId","updatedSchedule","find","s","ScheduleID","put","deleteSchedule","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginBottom","type","placeholder","onChange","marginRight","onClick","map","schedule","TransitLineName","TravelTime","ArrivalDateTime","DepartureDateTime","TrainID","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/ManageSchedulesTab.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const ManageSchedulesTab = () => {\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState('');\n//   const [editMode, setEditMode] = useState(null);\n//   const [formValues, setFormValues] = useState({});\n\n//   // Fetch schedules on component mount\n//   useEffect(() => {\n//     fetchSchedules();\n//   }, []);\n\n//   // Function to fetch train schedules\n//   const fetchSchedules = async () => {\n//     try {\n//       const response = await axiosInstance.get('/representative/schedules');\n//       setSchedules(response.data.schedules);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching schedules:', err);\n//       setError('Failed to fetch schedules.');\n//     }\n//   };\n\n//   // Handle delete schedule\n//   const deleteSchedule = async (scheduleId) => {\n//     try {\n//       await axiosInstance.delete(`/representative/schedules/${scheduleId}`);\n//       setSchedules(schedules.filter((s) => s.ScheduleID !== scheduleId));\n//     } catch (err) {\n//       console.error('Error deleting schedule:', err);\n//       setError('Failed to delete schedule.');\n//     }\n//   };\n\n//   // Handle edit schedule\n//   const editSchedule = (schedule) => {\n//     setEditMode(schedule.ScheduleID);\n//     setFormValues({\n//       TransitLineName: schedule.TransitLineName,\n//       DepartureDateTime: schedule.DepartureDateTime,\n//       ArrivalDateTime: schedule.ArrivalDateTime,\n//       TravelTime: schedule.TravelTime,\n//     });\n//   };\n\n//   // Handle form input changes\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormValues({ ...formValues, [name]: value });\n//   };\n\n//   // Handle save edited schedule\n//   const saveSchedule = async (scheduleId) => {\n//     try {\n//       await axiosInstance.put(`/representative/schedules/${scheduleId}`, formValues);\n//       setEditMode(null);\n//       fetchSchedules();\n//     } catch (err) {\n//       console.error('Error updating schedule:', err);\n//       setError('Failed to update schedule.');\n//     }\n//   };\n\n//   // Render\n//   return (\n//     <div>\n//       <h2>Manage Schedules</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Schedule ID</th>\n//             <th>Transit Line</th>\n//             <th>Departure Time</th>\n//             <th>Arrival Time</th>\n//             <th>Travel Time</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {schedules.map((schedule) => (\n//             <tr key={schedule.ScheduleID}>\n//               <td>{schedule.ScheduleID}</td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"text\"\n//                     name=\"TransitLineName\"\n//                     value={formValues.TransitLineName}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   schedule.TransitLineName\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"datetime-local\"\n//                     name=\"DepartureDateTime\"\n//                     value={formValues.DepartureDateTime}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   new Date(schedule.DepartureDateTime).toLocaleString()\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"datetime-local\"\n//                     name=\"ArrivalDateTime\"\n//                     value={formValues.ArrivalDateTime}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   new Date(schedule.ArrivalDateTime).toLocaleString()\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <input\n//                     type=\"time\"\n//                     name=\"TravelTime\"\n//                     value={formValues.TravelTime}\n//                     onChange={handleInputChange}\n//                   />\n//                 ) : (\n//                   schedule.TravelTime\n//                 )}\n//               </td>\n//               <td>\n//                 {editMode === schedule.ScheduleID ? (\n//                   <>\n//                     <button onClick={() => saveSchedule(schedule.ScheduleID)}>Save</button>\n//                     <button onClick={() => setEditMode(null)}>Cancel</button>\n//                   </>\n//                 ) : (\n//                   <>\n//                     <button onClick={() => editSchedule(schedule)}>Edit</button>\n//                     <button onClick={() => deleteSchedule(schedule.ScheduleID)}>Delete</button>\n//                   </>\n//                 )}\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ManageSchedulesTab;\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\nconst ManageSchedulesTab = () => {\n  const [schedules, setSchedules] = useState([]);\n  const [newSchedule, setNewSchedule] = useState({\n    transitLineName: '',\n    travelTime: '',\n    arrivalDateTime: '',\n    departureDateTime: '',\n    trainId: '',\n  });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchSchedules();\n  }, []);\n\n  const fetchSchedules = async () => {\n    try {\n      const response = await axiosInstance.get('/api/customer-rep/train-schedules');\n      setSchedules(response.data.schedules);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching schedules:', err);\n      setError('Failed to fetch schedules.');\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewSchedule((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const addSchedule = async () => {\n    try {\n      await axiosInstance.post('customer-rep/train-schedules', newSchedule);\n      fetchSchedules(); // Refresh the list after adding a new schedule\n    } catch (err) {\n      console.error('Error adding schedule:', err);\n      setError('Failed to add new schedule.');\n    }\n  };\n\n  const editSchedule = async (scheduleId) => {\n    try {\n      const updatedSchedule = schedules.find((s) => s.ScheduleID === scheduleId);\n      await axiosInstance.put(`/api/customer-rep/train-schedules/${scheduleId}`, updatedSchedule);\n      fetchSchedules(); // Refresh the list after editing\n    } catch (err) {\n      console.error('Error editing schedule:', err);\n      setError('Failed to edit schedule.');\n    }\n  };\n\n  const deleteSchedule = async (scheduleId) => {\n    try {\n      await axiosInstance.delete(`/api/customer-rep/train-schedules/${scheduleId}`);\n      fetchSchedules(); // Refresh the list after deleting\n    } catch (err) {\n      console.error('Error deleting schedule:', err);\n      setError('Failed to delete schedule.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Manage Train Schedules</h2>\n      {error && <p className=\"error\">{error}</p>}\n\n      {/* Form to Add New Schedule */}\n      <div style={{ marginBottom: '20px' }}>\n        <input\n          type=\"text\"\n          name=\"transitLineName\"\n          placeholder=\"Transit Line Name\"\n          value={newSchedule.transitLineName}\n          onChange={handleInputChange}\n          style={{ marginRight: '10px' }}\n        />\n        <input\n          type=\"time\"\n          name=\"travelTime\"\n          placeholder=\"Travel Time\"\n          value={newSchedule.travelTime}\n          onChange={handleInputChange}\n          style={{ marginRight: '10px' }}\n        />\n        <input\n          type=\"datetime-local\"\n          name=\"arrivalDateTime\"\n          placeholder=\"Arrival DateTime\"\n          value={newSchedule.arrivalDateTime}\n          onChange={handleInputChange}\n          style={{ marginRight: '10px' }}\n        />\n        <input\n          type=\"datetime-local\"\n          name=\"departureDateTime\"\n          placeholder=\"Departure DateTime\"\n          value={newSchedule.departureDateTime}\n          onChange={handleInputChange}\n          style={{ marginRight: '10px' }}\n        />\n        <input\n          type=\"text\"\n          name=\"trainId\"\n          placeholder=\"Train ID\"\n          value={newSchedule.trainId}\n          onChange={handleInputChange}\n          style={{ marginRight: '10px' }}\n        />\n        <button onClick={addSchedule}>Add Schedule</button>\n      </div>\n\n      {/* Schedule Table */}\n      <table>\n        <thead>\n          <tr>\n            <th>Schedule ID</th>\n            <th>Transit Line Name</th>\n            <th>Travel Time</th>\n            <th>Arrival DateTime</th>\n            <th>Departure DateTime</th>\n            <th>Train ID</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {schedules.map((schedule) => (\n            <tr key={schedule.ScheduleID}>\n              <td>{schedule.ScheduleID}</td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={schedule.TransitLineName}\n                  onChange={(e) =>\n                    setSchedules((prev) =>\n                      prev.map((s) =>\n                        s.ScheduleID === schedule.ScheduleID ? { ...s, TransitLineName: e.target.value } : s\n                      )\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <input\n                  type=\"time\"\n                  value={schedule.TravelTime}\n                  onChange={(e) =>\n                    setSchedules((prev) =>\n                      prev.map((s) =>\n                        s.ScheduleID === schedule.ScheduleID ? { ...s, TravelTime: e.target.value } : s\n                      )\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <input\n                  type=\"datetime-local\"\n                  value={schedule.ArrivalDateTime}\n                  onChange={(e) =>\n                    setSchedules((prev) =>\n                      prev.map((s) =>\n                        s.ScheduleID === schedule.ScheduleID ? { ...s, ArrivalDateTime: e.target.value } : s\n                      )\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <input\n                  type=\"datetime-local\"\n                  value={schedule.DepartureDateTime}\n                  onChange={(e) =>\n                    setSchedules((prev) =>\n                      prev.map((s) =>\n                        s.ScheduleID === schedule.ScheduleID ? { ...s, DepartureDateTime: e.target.value } : s\n                      )\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={schedule.TrainID}\n                  onChange={(e) =>\n                    setSchedules((prev) =>\n                      prev.map((s) =>\n                        s.ScheduleID === schedule.ScheduleID ? { ...s, TrainID: e.target.value } : s\n                      )\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <button onClick={() => editSchedule(schedule.ScheduleID)}>Edit</button>\n                <button onClick={() => deleteSchedule(schedule.ScheduleID)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageSchedulesTab;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAC7CW,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,EAAE;IACdC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}