{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/SalesReportTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesReport = () => {\n  _s();\n  const [month, setMonth] = useState(\"\"); // Selected month\n  const [revenueData, setRevenueData] = useState([]); // Revenue data\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    // Fetch revenue data when the month changes\n    const fetchRevenue = async () => {\n      try {\n        const response = await axiosInstance.get(`/admin/sales-report?month=${month || \"all\"}`);\n        setRevenueData(response.data || []);\n        setError(\"\");\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch revenue data.\");\n      }\n    };\n    fetchRevenue();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        children: \"Select Month: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        value: month,\n        onChange: e => setMonth(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"01\",\n          children: \"January\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"02\",\n          children: \"February\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"03\",\n          children: \"March\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"04\",\n          children: \"April\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"05\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"06\",\n          children: \"June\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"07\",\n          children: \"July\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"08\",\n          children: \"August\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"09\",\n          children: \"September\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"October\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"11\",\n          children: \"November\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), revenueData.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: revenueData.map(data => data.month),\n        // Example: ['January', 'February']\n        datasets: [{\n          label: \"Revenue ($)\",\n          data: revenueData.map(data => data.revenue),\n          // Example: [1000, 2000]\n          borderColor: \"blue\",\n          backgroundColor: \"rgba(0, 0, 255, 0.2)\",\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: \"Month\"\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: \"Revenue ($)\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No revenue data available for the selected month(s).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesReport, \"vjzqxx+N690fXLYDKrZhF8RR5fU=\");\n_c = SalesReport;\nexport default SalesReport;\nvar _c;\n$RefreshReg$(_c, \"SalesReport\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","Line","jsxDEV","_jsxDEV","SalesReport","_s","month","setMonth","revenueData","setRevenueData","error","setError","fetchRevenue","response","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","htmlFor","id","value","onChange","e","target","length","labels","map","datasets","label","revenue","borderColor","backgroundColor","fill","options","responsive","scales","x","title","display","text","y","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/SalesReportTab.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { Line } from \"react-chartjs-2\";\n\nconst SalesReport = () => {\n  const [month, setMonth] = useState(\"\"); // Selected month\n  const [revenueData, setRevenueData] = useState([]); // Revenue data\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch revenue data when the month changes\n    const fetchRevenue = async () => {\n      try {\n        const response = await axiosInstance.get(\n          `/admin/sales-report?month=${month || \"all\"}`\n        );\n        setRevenueData(response.data || []);\n        setError(\"\");\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch revenue data.\");\n      }\n    };\n\n    fetchRevenue();\n  }, [month]);\n\n  return (\n    <div>\n      <h2>Sales Report</h2>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {/* Dropdown for selecting month */}\n      <div style={{ marginBottom: \"1rem\" }}>\n        <label htmlFor=\"month\">Select Month: </label>\n        <select\n          id=\"month\"\n          value={month}\n          onChange={(e) => setMonth(e.target.value)}\n        >\n          <option value=\"\">All Months</option>\n          <option value=\"01\">January</option>\n          <option value=\"02\">February</option>\n          <option value=\"03\">March</option>\n          <option value=\"04\">April</option>\n          <option value=\"05\">May</option>\n          <option value=\"06\">June</option>\n          <option value=\"07\">July</option>\n          <option value=\"08\">August</option>\n          <option value=\"09\">September</option>\n          <option value=\"10\">October</option>\n          <option value=\"11\">November</option>\n          <option value=\"12\">December</option>\n        </select>\n      </div>\n\n      {/* Display revenue data */}\n      {revenueData.length > 0 ? (\n        <Line\n          data={{\n            labels: revenueData.map((data) => data.month), // Example: ['January', 'February']\n            datasets: [\n              {\n                label: \"Revenue ($)\",\n                data: revenueData.map((data) => data.revenue), // Example: [1000, 2000]\n                borderColor: \"blue\",\n                backgroundColor: \"rgba(0, 0, 255, 0.2)\",\n                fill: true,\n              },\n            ],\n          }}\n          options={{\n            responsive: true,\n            scales: {\n              x: {\n                title: { display: true, text: \"Month\" },\n              },\n              y: {\n                title: { display: true, text: \"Revenue ($)\" },\n              },\n            },\n          }}\n        />\n      ) : (\n        <p>No revenue data available for the selected month(s).</p>\n      )}\n    </div>\n  );\n};\n\nexport default SalesReport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}