{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/ReservationsTab.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const Reservations = () => {\n//   const [reservations, setReservations] = useState([]);\n//   const [transitLines, setTransitLines] = useState([]);\n//   const [customers, setCustomers] = useState([]);\n//   const [filterBy, setFilterBy] = useState(\"all\");\n//   const [filterValue, setFilterValue] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch initial reservation data\n//     const fetchReservations = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/admin/reservations\");\n//         setReservations(response.data.reservations || []);\n//       } catch (err) {\n//         console.error(\"Error fetching reservations:\", err);\n//       }\n//     };\n\n//     // Fetch transit lines for dropdown\n//     const fetchTransitLines = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/admin/transit-lines\");\n//         setTransitLines(response.data || []);\n//       } catch (err) {\n//         console.error(\"Error fetching transit lines:\", err);\n//       }\n//     };\n\n//     // Fetch customers for dropdown\n//     const fetchCustomers = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/admin/customers\");\n//         setCustomers(response.data || []);\n//       } catch (err) {\n//         console.error(\"Error fetching customers:\", err);\n//       }\n//     };\n\n//     fetchReservations();\n//     fetchTransitLines();\n//     fetchCustomers();\n//   }, []);\n\n//   const handleFilterChange = async () => {\n//     let endpoint = \"/admin/reservations\";\n//     if (filterBy === \"transitLine\" && filterValue) {\n//       endpoint = `/admin/reservations?transitLine=${filterValue}`;\n//     } else if (filterBy === \"customer\" && filterValue) {\n//       endpoint = `/admin/reservations?customerName=${filterValue}`;\n//     }\n\n//     try {\n//       const response = await axiosInstance.get(endpoint);\n//       setReservations(response.data.reservations || []);\n//     } catch (err) {\n//       console.error(\"Error filtering reservations:\", err);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Reservations</h2>\n\n//       {/* Filter Dropdowns */}\n//       <div style={{ marginBottom: \"1rem\" }}>\n//         <label htmlFor=\"filterBy\">Filter By: </label>\n//         <select\n//           id=\"filterBy\"\n//           value={filterBy}\n//           onChange={(e) => setFilterBy(e.target.value)}\n//         >\n//           <option value=\"all\">All</option>\n//           <option value=\"transitLine\">Transit Line</option>\n//           <option value=\"customer\">Customer</option>\n//         </select>\n\n//         {filterBy === \"transitLine\" && (\n//           <select\n//             id=\"transitLine\"\n//             value={filterValue}\n//             onChange={(e) => setFilterValue(e.target.value)}\n//             style={{ marginLeft: \"1rem\" }}\n//           >\n//             <option value=\"\">Select Transit Line</option>\n//             {transitLines.map((line) => (\n//               <option key={line.TransitLineName} value={line.TransitLineName}>\n//                 {line.TransitLineName}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         {filterBy === \"customer\" && (\n//           <select\n//             id=\"customer\"\n//             value={filterValue}\n//             onChange={(e) => setFilterValue(e.target.value)}\n//             style={{ marginLeft: \"1rem\" }}\n//           >\n//             <option value=\"\">Select Customer</option>\n//             {customers.map((customer) => (\n//               <option\n//                 key={customer.CustomerID}\n//                 value={`${customer.FirstName} ${customer.LastName}`}\n//               >\n//                 {customer.FirstName} {customer.LastName}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         <button\n//           onClick={handleFilterChange}\n//           style={{ marginLeft: \"1rem\", padding: \"0.5rem\" }}\n//         >\n//           Apply Filter\n//         </button>\n//       </div>\n\n//       {/* Display Reservations */}\n//       <table border=\"1\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//         <thead>\n//           <tr>\n//             <th>Reservation ID</th>\n//             <th>Customer</th>\n//             <th>Transit Line</th>\n//             <th>Total Fare</th>\n//             <th>Trip Type</th>\n//             <th>Departure</th>\n//             <th>Arrival</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {reservations.length > 0 ? (\n//             reservations.map((reservation) => (\n//               <tr key={reservation.ReservationID}>\n//                 <td>{reservation.ReservationID}</td>\n//                 <td>{`${reservation.FirstName} ${reservation.LastName}`}</td>\n//                 <td>{reservation.TransitLineName}</td>\n//                 <td>${reservation.TotalFare.toFixed(2)}</td>\n//                 <td>{reservation.TripType}</td>\n//                 <td>{reservation.DepartureStation}</td>\n//                 <td>{reservation.ArrivalStation}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"7\">No reservations found.</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Reservations;\n\n// import React, { useState, useEffect } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const Reservations = () => {\n//   const [reservations, setReservations] = useState([]);\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchReservations();\n//   }, []);\n\n//   const fetchReservations = async () => {\n//     try {\n//       setLoading(true); // Start loading before fetching data\n//       const response = await axiosInstance.get('/admin/reservations');\n//       const data = response.data.reservations;\n\n//       // Ensure that all the expected fields are available in the response\n//       const reservationsWithDetails = data.map((reservation) => ({\n//         ReservationID: reservation.ReservationID,\n//         ReservationDate: reservation.ReservationDate,\n//         CustomerName: `${reservation.CustomerFirstName} ${reservation.CustomerLastName}`,\n//         TransitLine: reservation.TransitLine || 'Unknown Transit Line',\n//         TotalFare: reservation.TotalFare,\n//         TripType: reservation.TripType,\n//         DepartureStation: reservation.DepartureStation,\n//         ArrivalStation: reservation.ArrivalStation,\n//       }));\n\n//       setReservations(reservationsWithDetails);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching reservations:', err);\n//       setError('Failed to fetch reservations.');\n//     } finally {\n//       setLoading(false); // Stop loading after data is fetched or on error\n//     }\n//   };\n\n//   const deleteReservation = async (reservationId) => {\n//     try {\n//       await axiosInstance.delete(`/admin/reservations/${reservationId}`);\n//       setReservations(reservations.filter((r) => r.ReservationID !== reservationId));\n//     } catch (err) {\n//       console.error('Error deleting reservation:', err);\n//       setError('Failed to delete reservation.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Reservations</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       {loading ? (\n//         <p>Loading reservations...</p>\n//       ) : (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Reservation ID</th>\n//               <th>Customer</th>\n//               <th>Transit Line</th>\n//               <th>Total Fare</th>\n//               <th>Trip Type</th>\n//               <th>Departure</th>\n//               <th>Arrival</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {reservations.length > 0 ? (\n//               reservations.map((reservation) => (\n//                 <tr key={reservation.ReservationID}>\n//                   <td>{reservation.ReservationID}</td>\n//                   <td>{reservation.CustomerName}</td>\n//                   <td>{reservation.TransitLine}</td>\n//                   <td>${reservation.TotalFare.toFixed(2)}</td>\n//                   <td>{reservation.TripType}</td>\n//                   <td>{reservation.DepartureStation}</td>\n//                   <td>{reservation.ArrivalStation}</td>\n//                   <td>\n//                     <button onClick={() => deleteReservation(reservation.ReservationID)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))\n//             ) : (\n//               <tr>\n//                 <td colSpan=\"8\" style={{ textAlign: 'center' }}>\n//                   No reservations available.\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Reservations;\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationsTab = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [error, setError] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [transitLine, setTransitLine] = useState('');\n  const [tripType, setTripType] = useState('');\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n  const fetchReservations = async (filters = {}) => {\n    try {\n      const response = await axiosInstance.get('/admin/reservations', {\n        params: filters\n      });\n      setReservations(response.data.reservations);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching reservations:', err);\n      setError('Failed to fetch reservations.');\n    }\n  };\n  const handleFilterSubmit = e => {\n    e.preventDefault();\n    fetchReservations({\n      customerName,\n      transitLine,\n      tripType\n    });\n  };\n  const deleteReservation = async reservationId => {\n    try {\n      await axiosInstance.delete(`/admin/reservations/${reservationId}`);\n      setReservations(reservations.filter(r => r.ReservationID !== reservationId));\n    } catch (err) {\n      console.error('Error deleting reservation:', err);\n      setError('Failed to delete reservation.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFilterSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Customer Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customerName,\n          onChange: e => setCustomerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Transit Line: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: transitLine,\n          onChange: e => setTransitLine(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Trip Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: tripType,\n          onChange: e => setTripType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Apply Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reservation ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transit Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Fare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Trip Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arrival\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reservations.map(reservation => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.ReservationID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [reservation.CustomerFirstName, \" \", reservation.CustomerLastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.TransitLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", reservation.TotalFare.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.TripType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.DepartureStation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.ArrivalStation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReservation(reservation.ReservationID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, reservation.ReservationID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationsTab, \"2q4EantIgdYSmaMjkiP3lkhQ0kw=\");\n_c = ReservationsTab;\nexport default ReservationsTab;\nvar _c;\n$RefreshReg$(_c, \"ReservationsTab\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","ReservationsTab","_s","reservations","setReservations","error","setError","customerName","setCustomerName","transitLine","setTransitLine","tripType","setTripType","fetchReservations","filters","response","get","params","data","err","console","handleFilterSubmit","e","preventDefault","deleteReservation","reservationId","delete","filter","r","ReservationID","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","map","reservation","CustomerFirstName","CustomerLastName","TransitLine","TotalFare","toFixed","TripType","DepartureStation","ArrivalStation","onClick","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/ReservationsTab.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const Reservations = () => {\n//   const [reservations, setReservations] = useState([]);\n//   const [transitLines, setTransitLines] = useState([]);\n//   const [customers, setCustomers] = useState([]);\n//   const [filterBy, setFilterBy] = useState(\"all\");\n//   const [filterValue, setFilterValue] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch initial reservation data\n//     const fetchReservations = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/admin/reservations\");\n//         setReservations(response.data.reservations || []);\n//       } catch (err) {\n//         console.error(\"Error fetching reservations:\", err);\n//       }\n//     };\n\n//     // Fetch transit lines for dropdown\n//     const fetchTransitLines = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/admin/transit-lines\");\n//         setTransitLines(response.data || []);\n//       } catch (err) {\n//         console.error(\"Error fetching transit lines:\", err);\n//       }\n//     };\n\n//     // Fetch customers for dropdown\n//     const fetchCustomers = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/admin/customers\");\n//         setCustomers(response.data || []);\n//       } catch (err) {\n//         console.error(\"Error fetching customers:\", err);\n//       }\n//     };\n\n//     fetchReservations();\n//     fetchTransitLines();\n//     fetchCustomers();\n//   }, []);\n\n//   const handleFilterChange = async () => {\n//     let endpoint = \"/admin/reservations\";\n//     if (filterBy === \"transitLine\" && filterValue) {\n//       endpoint = `/admin/reservations?transitLine=${filterValue}`;\n//     } else if (filterBy === \"customer\" && filterValue) {\n//       endpoint = `/admin/reservations?customerName=${filterValue}`;\n//     }\n\n//     try {\n//       const response = await axiosInstance.get(endpoint);\n//       setReservations(response.data.reservations || []);\n//     } catch (err) {\n//       console.error(\"Error filtering reservations:\", err);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Reservations</h2>\n\n//       {/* Filter Dropdowns */}\n//       <div style={{ marginBottom: \"1rem\" }}>\n//         <label htmlFor=\"filterBy\">Filter By: </label>\n//         <select\n//           id=\"filterBy\"\n//           value={filterBy}\n//           onChange={(e) => setFilterBy(e.target.value)}\n//         >\n//           <option value=\"all\">All</option>\n//           <option value=\"transitLine\">Transit Line</option>\n//           <option value=\"customer\">Customer</option>\n//         </select>\n\n//         {filterBy === \"transitLine\" && (\n//           <select\n//             id=\"transitLine\"\n//             value={filterValue}\n//             onChange={(e) => setFilterValue(e.target.value)}\n//             style={{ marginLeft: \"1rem\" }}\n//           >\n//             <option value=\"\">Select Transit Line</option>\n//             {transitLines.map((line) => (\n//               <option key={line.TransitLineName} value={line.TransitLineName}>\n//                 {line.TransitLineName}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         {filterBy === \"customer\" && (\n//           <select\n//             id=\"customer\"\n//             value={filterValue}\n//             onChange={(e) => setFilterValue(e.target.value)}\n//             style={{ marginLeft: \"1rem\" }}\n//           >\n//             <option value=\"\">Select Customer</option>\n//             {customers.map((customer) => (\n//               <option\n//                 key={customer.CustomerID}\n//                 value={`${customer.FirstName} ${customer.LastName}`}\n//               >\n//                 {customer.FirstName} {customer.LastName}\n//               </option>\n//             ))}\n//           </select>\n//         )}\n\n//         <button\n//           onClick={handleFilterChange}\n//           style={{ marginLeft: \"1rem\", padding: \"0.5rem\" }}\n//         >\n//           Apply Filter\n//         </button>\n//       </div>\n\n//       {/* Display Reservations */}\n//       <table border=\"1\" style={{ width: \"100%\", textAlign: \"left\" }}>\n//         <thead>\n//           <tr>\n//             <th>Reservation ID</th>\n//             <th>Customer</th>\n//             <th>Transit Line</th>\n//             <th>Total Fare</th>\n//             <th>Trip Type</th>\n//             <th>Departure</th>\n//             <th>Arrival</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {reservations.length > 0 ? (\n//             reservations.map((reservation) => (\n//               <tr key={reservation.ReservationID}>\n//                 <td>{reservation.ReservationID}</td>\n//                 <td>{`${reservation.FirstName} ${reservation.LastName}`}</td>\n//                 <td>{reservation.TransitLineName}</td>\n//                 <td>${reservation.TotalFare.toFixed(2)}</td>\n//                 <td>{reservation.TripType}</td>\n//                 <td>{reservation.DepartureStation}</td>\n//                 <td>{reservation.ArrivalStation}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"7\">No reservations found.</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Reservations;\n\n\n// import React, { useState, useEffect } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const Reservations = () => {\n//   const [reservations, setReservations] = useState([]);\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchReservations();\n//   }, []);\n\n//   const fetchReservations = async () => {\n//     try {\n//       setLoading(true); // Start loading before fetching data\n//       const response = await axiosInstance.get('/admin/reservations');\n//       const data = response.data.reservations;\n\n//       // Ensure that all the expected fields are available in the response\n//       const reservationsWithDetails = data.map((reservation) => ({\n//         ReservationID: reservation.ReservationID,\n//         ReservationDate: reservation.ReservationDate,\n//         CustomerName: `${reservation.CustomerFirstName} ${reservation.CustomerLastName}`,\n//         TransitLine: reservation.TransitLine || 'Unknown Transit Line',\n//         TotalFare: reservation.TotalFare,\n//         TripType: reservation.TripType,\n//         DepartureStation: reservation.DepartureStation,\n//         ArrivalStation: reservation.ArrivalStation,\n//       }));\n\n//       setReservations(reservationsWithDetails);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching reservations:', err);\n//       setError('Failed to fetch reservations.');\n//     } finally {\n//       setLoading(false); // Stop loading after data is fetched or on error\n//     }\n//   };\n\n//   const deleteReservation = async (reservationId) => {\n//     try {\n//       await axiosInstance.delete(`/admin/reservations/${reservationId}`);\n//       setReservations(reservations.filter((r) => r.ReservationID !== reservationId));\n//     } catch (err) {\n//       console.error('Error deleting reservation:', err);\n//       setError('Failed to delete reservation.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Reservations</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       {loading ? (\n//         <p>Loading reservations...</p>\n//       ) : (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Reservation ID</th>\n//               <th>Customer</th>\n//               <th>Transit Line</th>\n//               <th>Total Fare</th>\n//               <th>Trip Type</th>\n//               <th>Departure</th>\n//               <th>Arrival</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {reservations.length > 0 ? (\n//               reservations.map((reservation) => (\n//                 <tr key={reservation.ReservationID}>\n//                   <td>{reservation.ReservationID}</td>\n//                   <td>{reservation.CustomerName}</td>\n//                   <td>{reservation.TransitLine}</td>\n//                   <td>${reservation.TotalFare.toFixed(2)}</td>\n//                   <td>{reservation.TripType}</td>\n//                   <td>{reservation.DepartureStation}</td>\n//                   <td>{reservation.ArrivalStation}</td>\n//                   <td>\n//                     <button onClick={() => deleteReservation(reservation.ReservationID)}>Delete</button>\n//                   </td>\n//                 </tr>\n//               ))\n//             ) : (\n//               <tr>\n//                 <td colSpan=\"8\" style={{ textAlign: 'center' }}>\n//                   No reservations available.\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Reservations;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\nconst ReservationsTab = () => {\n  const [reservations, setReservations] = useState([]);\n  const [error, setError] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [transitLine, setTransitLine] = useState('');\n  const [tripType, setTripType] = useState('');\n\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n\n  const fetchReservations = async (filters = {}) => {\n    try {\n      const response = await axiosInstance.get('/admin/reservations', {\n        params: filters,\n      });\n      setReservations(response.data.reservations);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching reservations:', err);\n      setError('Failed to fetch reservations.');\n    }\n  };\n\n  const handleFilterSubmit = (e) => {\n    e.preventDefault();\n    fetchReservations({\n      customerName,\n      transitLine,\n      tripType,\n    });\n  };\n\n  const deleteReservation = async (reservationId) => {\n    try {\n      await axiosInstance.delete(`/admin/reservations/${reservationId}`);\n      setReservations(reservations.filter((r) => r.ReservationID !== reservationId));\n    } catch (err) {\n      console.error('Error deleting reservation:', err);\n      setError('Failed to delete reservation.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reservations</h2>\n      {error && <p className=\"error\">{error}</p>}\n      <form onSubmit={handleFilterSubmit}>\n        <div>\n          <label>Customer Name: </label>\n          <input\n            type=\"text\"\n            value={customerName}\n            onChange={(e) => setCustomerName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Transit Line: </label>\n          <input\n            type=\"text\"\n            value={transitLine}\n            onChange={(e) => setTransitLine(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Trip Type: </label>\n          <input\n            type=\"text\"\n            value={tripType}\n            onChange={(e) => setTripType(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Apply Filter</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Reservation ID</th>\n            <th>Customer</th>\n            <th>Transit Line</th>\n            <th>Total Fare</th>\n            <th>Trip Type</th>\n            <th>Departure</th>\n            <th>Arrival</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reservations.map((reservation) => (\n            <tr key={reservation.ReservationID}>\n              <td>{reservation.ReservationID}</td>\n              <td>{reservation.CustomerFirstName} {reservation.CustomerLastName}</td>\n              <td>{reservation.TransitLine}</td>\n              <td>${reservation.TotalFare.toFixed(2)}</td>\n              <td>{reservation.TripType}</td>\n              <td>{reservation.DepartureStation}</td>\n              <td>{reservation.ArrivalStation}</td>\n              <td>\n                <button onClick={() => deleteReservation(reservation.ReservationID)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ReservationsTab;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}