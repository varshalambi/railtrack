{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/ManageRepresentatives.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageRepresentatives = () => {\n  _s();\n  const [representatives, setRepresentatives] = useState([]);\n  const [newRep, setNewRep] = useState({\n    ssn: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    employeeType: \"Staff\"\n  });\n  const [editRep, setEditRep] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [admins, setAdmins] = useState([]);\n  const [staff, setStaff] = useState([]);\n\n  // Fetch all representatives\n  useEffect(() => {\n    const fetchRepresentatives = async () => {\n      try {\n        const response = await axiosInstance.get(\"/admin/employees\");\n        const employees = response.data.employees || [];\n        const admins = employees.filter(emp => emp.EmployeeType === \"Admin\");\n        const staff = employees.filter(emp => emp.EmployeeType === \"Staff\");\n        setAdmins(admins);\n        setStaff(staff);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch representatives.\");\n      }\n    };\n    fetchRepresentatives();\n  }, []);\n\n  // Handle input changes for adding/editing\n  const handleInputChange = (e, isEdit = false) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEdit) {\n      setEditRep(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewRep(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle add representative\n  const handleAddRep = async () => {\n    try {\n      const trimmedRep = {\n        ssn: newRep.ssn.trim(),\n        firstName: newRep.firstName.trim(),\n        lastName: newRep.lastName.trim(),\n        username: newRep.username.trim(),\n        password: newRep.password.trim(),\n        employeeType: newRep.employeeType // Either 'Admin' or 'Staff'\n      };\n\n      // Validate required fields\n      if (!trimmedRep.ssn || !trimmedRep.firstName || !trimmedRep.lastName || !trimmedRep.username || !trimmedRep.password) {\n        setError(\"All fields are required.\");\n        return;\n      }\n\n      // Make API request\n      const response = await axiosInstance.post(\"/admin/employees\", trimmedRep);\n\n      // Append the new employee to the state\n      setRepresentatives(prev => [...prev, {\n        EmpID: response.data.empId,\n        FirstName: trimmedRep.firstName,\n        LastName: trimmedRep.lastName,\n        Username: trimmedRep.username,\n        EmployeeType: trimmedRep.employeeType\n      }]);\n\n      // Reset the form and clear messages\n      setNewRep({\n        ssn: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n        employeeType: \"Staff\" // Default to 'Staff'\n      });\n      setSuccess(\"Representative added successfully.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to add representative.\");\n    }\n  };\n\n  // Edit a representative\n  const handleEditRep = async () => {\n    var _editRep$ssn, _editRep$firstName, _editRep$lastName, _editRep$username, _editRep$password, _editRep$employeeType;\n    if (!(editRep !== null && editRep !== void 0 && (_editRep$ssn = editRep.ssn) !== null && _editRep$ssn !== void 0 && _editRep$ssn.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$firstName = editRep.firstName) !== null && _editRep$firstName !== void 0 && _editRep$firstName.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$lastName = editRep.lastName) !== null && _editRep$lastName !== void 0 && _editRep$lastName.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$username = editRep.username) !== null && _editRep$username !== void 0 && _editRep$username.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$password = editRep.password) !== null && _editRep$password !== void 0 && _editRep$password.trim()) || !(editRep !== null && editRep !== void 0 && (_editRep$employeeType = editRep.employeeType) !== null && _editRep$employeeType !== void 0 && _editRep$employeeType.trim())) {\n      setError(\"All fields are required.\");\n      return;\n    }\n    try {\n      var _response$data;\n      // API call to update representative\n      const response = await axiosInstance.put(`/admin/employees/${editRep.EmpID}`, {\n        ssn: editRep.ssn,\n        firstName: editRep.firstName,\n        lastName: editRep.lastName,\n        username: editRep.username,\n        password: editRep.password,\n        employeeType: editRep.employeeType\n      });\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) === \"Employee updated successfully\") {\n        // Fetch updated representatives list after successful API call\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n        setEditRep(null); // Close the edit form\n        setSuccess(\"Representative updated successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating representative:\", err);\n      setError(\"Failed to update representative.\");\n    }\n  };\n\n  // Delete a representative\n  const handleDeleteRep = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this representative?\")) return;\n    try {\n      var _response$data2;\n      // API call to delete the representative\n      const response = await axiosInstance.delete(`/admin/employees/${id}`);\n      if ((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message) === \"Employee deleted successfully\") {\n        // Re-fetch the updated representatives list after deletion\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n        setSuccess(\"Representative deleted successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting representative:\", err);\n      setError(\"Failed to delete representative.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Representatives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.EmpID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.FirstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.LastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.Username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"*\".repeat(admin.Password.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"*\".repeat(admin.SSN.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: admin.EmployeeType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditRep(admin),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteRep(admin.EmpID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, admin.EmpID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SSN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: staff.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.EmpID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.FirstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.LastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.Username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"*\".repeat(emp.Password.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"*\".repeat(emp.SSN.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.EmployeeType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditRep(emp),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteRep(emp.EmpID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, emp.EmpID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 11\n  }, this);\n};\n_s(ManageRepresentatives, \"8hV+p7Mpz9qqC0dOGg1CBt441NE=\");\n_c = ManageRepresentatives;\nexport default ManageRepresentatives;\nvar _c;\n$RefreshReg$(_c, \"ManageRepresentatives\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","ManageRepresentatives","_s","representatives","setRepresentatives","newRep","setNewRep","ssn","firstName","lastName","username","password","employeeType","editRep","setEditRep","error","setError","success","setSuccess","admins","setAdmins","staff","setStaff","fetchRepresentatives","response","get","employees","data","filter","emp","EmployeeType","err","console","handleInputChange","e","isEdit","name","value","target","prev","handleAddRep","trimmedRep","trim","post","EmpID","empId","FirstName","LastName","Username","handleEditRep","_editRep$ssn","_editRep$firstName","_editRep$lastName","_editRep$username","_editRep$password","_editRep$employeeType","_response$data","put","message","updatedResponse","Error","handleDeleteRep","id","window","confirm","_response$data2","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","admin","repeat","Password","length","SSN","onClick","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/ManageRepresentatives.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\n\nconst ManageRepresentatives = () => {\n  const [representatives, setRepresentatives] = useState([]);\n  const [newRep, setNewRep] = useState({\n    ssn: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    employeeType: \"Staff\",\n  });\n  const [editRep, setEditRep] = useState(null);\n  \n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [admins, setAdmins] = useState([]);\n  const [staff, setStaff] = useState([]);\n\n\n  // Fetch all representatives\n  useEffect(() => {\n    const fetchRepresentatives = async () => {\n      try {\n        const response = await axiosInstance.get(\"/admin/employees\");\n        const employees = response.data.employees || [];\n        \n        const admins = employees.filter(emp => emp.EmployeeType === \"Admin\");\n        const staff = employees.filter(emp => emp.EmployeeType === \"Staff\");\n        \n        setAdmins(admins);\n        setStaff(staff);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to fetch representatives.\");\n      }\n    };\n    fetchRepresentatives();\n  }, []);\n  \n  // Handle input changes for adding/editing\n  const handleInputChange = (e, isEdit = false) => {\n    const { name, value } = e.target;\n    if (isEdit) {\n      setEditRep((prev) => ({ ...prev, [name]: value }));\n    } else {\n      setNewRep((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  // Handle add representative\n  const handleAddRep = async () => {\n    try {\n      const trimmedRep = {\n        ssn: newRep.ssn.trim(),\n        firstName: newRep.firstName.trim(),\n        lastName: newRep.lastName.trim(),\n        username: newRep.username.trim(),\n        password: newRep.password.trim(),\n        employeeType: newRep.employeeType, // Either 'Admin' or 'Staff'\n      };\n  \n      // Validate required fields\n      if (\n        !trimmedRep.ssn ||\n        !trimmedRep.firstName ||\n        !trimmedRep.lastName ||\n        !trimmedRep.username ||\n        !trimmedRep.password\n      ) {\n        setError(\"All fields are required.\");\n        return;\n      }\n  \n      // Make API request\n      const response = await axiosInstance.post(\"/admin/employees\", trimmedRep);\n  \n      // Append the new employee to the state\n      setRepresentatives((prev) => [\n        ...prev,\n        {\n          EmpID: response.data.empId,\n          FirstName: trimmedRep.firstName,\n          LastName: trimmedRep.lastName,\n          Username: trimmedRep.username,\n          EmployeeType: trimmedRep.employeeType,\n        },\n      ]);\n  \n      // Reset the form and clear messages\n      setNewRep({\n        ssn: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n        employeeType: \"Staff\", // Default to 'Staff'\n      });\n      setSuccess(\"Representative added successfully.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to add representative.\");\n    }\n  };\n  \n\n  // Edit a representative\n  const handleEditRep = async () => {\n    if (\n      !editRep?.ssn?.trim() ||\n      !editRep?.firstName?.trim() ||\n      !editRep?.lastName?.trim() ||\n      !editRep?.username?.trim() ||\n      !editRep?.password?.trim() ||\n      !editRep?.employeeType?.trim()\n    ) {\n      setError(\"All fields are required.\");\n      return;\n    }\n  \n    try {\n      // API call to update representative\n      const response = await axiosInstance.put(`/admin/employees/${editRep.EmpID}`, {\n        ssn: editRep.ssn,\n        firstName: editRep.firstName,\n        lastName: editRep.lastName,\n        username: editRep.username,\n        password: editRep.password,\n        employeeType: editRep.employeeType,\n      });\n  \n      if (response?.data?.message === \"Employee updated successfully\") {\n        // Fetch updated representatives list after successful API call\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n  \n        setEditRep(null); // Close the edit form\n        setSuccess(\"Representative updated successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating representative:\", err);\n      setError(\"Failed to update representative.\");\n    }\n  };\n  \n  \n  \n  // Delete a representative\n  const handleDeleteRep = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this representative?\")) return;\n  \n    try {\n      // API call to delete the representative\n      const response = await axiosInstance.delete(`/admin/employees/${id}`);\n  \n      if (response?.data?.message === \"Employee deleted successfully\") {\n        // Re-fetch the updated representatives list after deletion\n        const updatedResponse = await axiosInstance.get(\"/admin/employees\");\n        setRepresentatives(updatedResponse.data.employees || []);\n  \n        setSuccess(\"Representative deleted successfully.\");\n        setError(\"\");\n      } else {\n        throw new Error(\"Unexpected response from server.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting representative:\", err);\n      setError(\"Failed to delete representative.\");\n    }\n  };\n  \n\n  return (<div>\n    <h1>Manage Representatives</h1>\n    {error && <p style={{ color: \"red\" }}>{error}</p>}\n    {success && <p style={{ color: \"green\" }}>{success}</p>}\n  \n    {/* Admin Table */}\n    <h2>Admins</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Username</th>\n          <th>Password</th>\n          <th>SSN</th>\n          <th>Role</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {admins.map((admin) => (\n          <tr key={admin.EmpID}>\n            <td>{admin.EmpID}</td>\n            <td>{admin.FirstName}</td>\n            <td>{admin.LastName}</td>\n            <td>{admin.Username}</td>\n            <td>{\"*\".repeat(admin.Password.length)}</td>\n            <td>{\"*\".repeat(admin.SSN.length)}</td>\n            <td>{admin.EmployeeType}</td>\n            <td>\n              <button onClick={() => setEditRep(admin)}>Edit</button>\n              <button onClick={() => handleDeleteRep(admin.EmpID)}>Delete</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  \n    {/* Staff Table */}\n    <h2>Staff</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Username</th>\n          <th>Password</th>\n          <th>SSN</th>\n          <th>Role</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {staff.map((emp) => (\n          <tr key={emp.EmpID}>\n            <td>{emp.EmpID}</td>\n            <td>{emp.FirstName}</td>\n            <td>{emp.LastName}</td>\n            <td>{emp.Username}</td>\n            <td>{\"*\".repeat(emp.Password.length)}</td>\n            <td>{\"*\".repeat(emp.SSN.length)}</td>\n            <td>{emp.EmployeeType}</td>\n            <td>\n              <button onClick={() => setEditRep(emp)}>Edit</button>\n              <button onClick={() => handleDeleteRep(emp.EmpID)}>Delete</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n  );\n};\n\nexport default ManageRepresentatives;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACnCW,GAAG,EAAE,EAAE;IACPC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;;EAGtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAM0B,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM1B,aAAa,CAAC2B,GAAG,CAAC,kBAAkB,CAAC;QAC5D,MAAMC,SAAS,GAAGF,QAAQ,CAACG,IAAI,CAACD,SAAS,IAAI,EAAE;QAE/C,MAAMP,MAAM,GAAGO,SAAS,CAACE,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,YAAY,KAAK,OAAO,CAAC;QACpE,MAAMT,KAAK,GAAGK,SAAS,CAACE,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,YAAY,KAAK,OAAO,CAAC;QAEnEV,SAAS,CAACD,MAAM,CAAC;QACjBG,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZC,OAAO,CAACjB,KAAK,CAACgB,GAAG,CAAC;QAClBf,QAAQ,CAAC,kCAAkC,CAAC;MAC9C;IACF,CAAC;IACDO,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,iBAAiB,GAAGA,CAACC,CAAC,EAAEC,MAAM,GAAG,KAAK,KAAK;IAC/C,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGH,CAAC,CAACI,MAAM;IAChC,IAAIH,MAAM,EAAE;MACVrB,UAAU,CAAEyB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,IAAI,GAAGC;MAAM,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACL/B,SAAS,CAAEiC,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,IAAI,GAAGC;MAAM,CAAC,CAAC,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,UAAU,GAAG;QACjBlC,GAAG,EAAEF,MAAM,CAACE,GAAG,CAACmC,IAAI,CAAC,CAAC;QACtBlC,SAAS,EAAEH,MAAM,CAACG,SAAS,CAACkC,IAAI,CAAC,CAAC;QAClCjC,QAAQ,EAAEJ,MAAM,CAACI,QAAQ,CAACiC,IAAI,CAAC,CAAC;QAChChC,QAAQ,EAAEL,MAAM,CAACK,QAAQ,CAACgC,IAAI,CAAC,CAAC;QAChC/B,QAAQ,EAAEN,MAAM,CAACM,QAAQ,CAAC+B,IAAI,CAAC,CAAC;QAChC9B,YAAY,EAAEP,MAAM,CAACO,YAAY,CAAE;MACrC,CAAC;;MAED;MACA,IACE,CAAC6B,UAAU,CAAClC,GAAG,IACf,CAACkC,UAAU,CAACjC,SAAS,IACrB,CAACiC,UAAU,CAAChC,QAAQ,IACpB,CAACgC,UAAU,CAAC/B,QAAQ,IACpB,CAAC+B,UAAU,CAAC9B,QAAQ,EACpB;QACAK,QAAQ,CAAC,0BAA0B,CAAC;QACpC;MACF;;MAEA;MACA,MAAMQ,QAAQ,GAAG,MAAM1B,aAAa,CAAC6C,IAAI,CAAC,kBAAkB,EAAEF,UAAU,CAAC;;MAEzE;MACArC,kBAAkB,CAAEmC,IAAI,IAAK,CAC3B,GAAGA,IAAI,EACP;QACEK,KAAK,EAAEpB,QAAQ,CAACG,IAAI,CAACkB,KAAK;QAC1BC,SAAS,EAAEL,UAAU,CAACjC,SAAS;QAC/BuC,QAAQ,EAAEN,UAAU,CAAChC,QAAQ;QAC7BuC,QAAQ,EAAEP,UAAU,CAAC/B,QAAQ;QAC7BoB,YAAY,EAAEW,UAAU,CAAC7B;MAC3B,CAAC,CACF,CAAC;;MAEF;MACAN,SAAS,CAAC;QACRC,GAAG,EAAE,EAAE;QACPC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE,OAAO,CAAE;MACzB,CAAC,CAAC;MACFM,UAAU,CAAC,oCAAoC,CAAC;MAChDF,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACjB,KAAK,CAACgB,GAAG,CAAC;MAClBf,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;EACF,CAAC;;EAGD;EACA,MAAMiC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,YAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;IAChC,IACE,EAAC1C,OAAO,aAAPA,OAAO,gBAAAqC,YAAA,GAAPrC,OAAO,CAAEN,GAAG,cAAA2C,YAAA,eAAZA,YAAA,CAAcR,IAAI,CAAC,CAAC,KACrB,EAAC7B,OAAO,aAAPA,OAAO,gBAAAsC,kBAAA,GAAPtC,OAAO,CAAEL,SAAS,cAAA2C,kBAAA,eAAlBA,kBAAA,CAAoBT,IAAI,CAAC,CAAC,KAC3B,EAAC7B,OAAO,aAAPA,OAAO,gBAAAuC,iBAAA,GAAPvC,OAAO,CAAEJ,QAAQ,cAAA2C,iBAAA,eAAjBA,iBAAA,CAAmBV,IAAI,CAAC,CAAC,KAC1B,EAAC7B,OAAO,aAAPA,OAAO,gBAAAwC,iBAAA,GAAPxC,OAAO,CAAEH,QAAQ,cAAA2C,iBAAA,eAAjBA,iBAAA,CAAmBX,IAAI,CAAC,CAAC,KAC1B,EAAC7B,OAAO,aAAPA,OAAO,gBAAAyC,iBAAA,GAAPzC,OAAO,CAAEF,QAAQ,cAAA2C,iBAAA,eAAjBA,iBAAA,CAAmBZ,IAAI,CAAC,CAAC,KAC1B,EAAC7B,OAAO,aAAPA,OAAO,gBAAA0C,qBAAA,GAAP1C,OAAO,CAAED,YAAY,cAAA2C,qBAAA,eAArBA,qBAAA,CAAuBb,IAAI,CAAC,CAAC,GAC9B;MACA1B,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IAEA,IAAI;MAAA,IAAAwC,cAAA;MACF;MACA,MAAMhC,QAAQ,GAAG,MAAM1B,aAAa,CAAC2D,GAAG,CAAC,oBAAoB5C,OAAO,CAAC+B,KAAK,EAAE,EAAE;QAC5ErC,GAAG,EAAEM,OAAO,CAACN,GAAG;QAChBC,SAAS,EAAEK,OAAO,CAACL,SAAS;QAC5BC,QAAQ,EAAEI,OAAO,CAACJ,QAAQ;QAC1BC,QAAQ,EAAEG,OAAO,CAACH,QAAQ;QAC1BC,QAAQ,EAAEE,OAAO,CAACF,QAAQ;QAC1BC,YAAY,EAAEC,OAAO,CAACD;MACxB,CAAC,CAAC;MAEF,IAAI,CAAAY,QAAQ,aAARA,QAAQ,wBAAAgC,cAAA,GAARhC,QAAQ,CAAEG,IAAI,cAAA6B,cAAA,uBAAdA,cAAA,CAAgBE,OAAO,MAAK,+BAA+B,EAAE;QAC/D;QACA,MAAMC,eAAe,GAAG,MAAM7D,aAAa,CAAC2B,GAAG,CAAC,kBAAkB,CAAC;QACnErB,kBAAkB,CAACuD,eAAe,CAAChC,IAAI,CAACD,SAAS,IAAI,EAAE,CAAC;QAExDZ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QAClBI,UAAU,CAAC,sCAAsC,CAAC;QAClDF,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACL,MAAM,IAAI4C,KAAK,CAAC,kCAAkC,CAAC;MACrD;IACF,CAAC,CAAC,OAAO7B,GAAG,EAAE;MACZC,OAAO,CAACjB,KAAK,CAAC,gCAAgC,EAAEgB,GAAG,CAAC;MACpDf,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;;EAID;EACA,MAAM6C,eAAe,GAAG,MAAOC,EAAE,IAAK;IACpC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,sDAAsD,CAAC,EAAE;IAE7E,IAAI;MAAA,IAAAC,eAAA;MACF;MACA,MAAMzC,QAAQ,GAAG,MAAM1B,aAAa,CAACoE,MAAM,CAAC,oBAAoBJ,EAAE,EAAE,CAAC;MAErE,IAAI,CAAAtC,QAAQ,aAARA,QAAQ,wBAAAyC,eAAA,GAARzC,QAAQ,CAAEG,IAAI,cAAAsC,eAAA,uBAAdA,eAAA,CAAgBP,OAAO,MAAK,+BAA+B,EAAE;QAC/D;QACA,MAAMC,eAAe,GAAG,MAAM7D,aAAa,CAAC2B,GAAG,CAAC,kBAAkB,CAAC;QACnErB,kBAAkB,CAACuD,eAAe,CAAChC,IAAI,CAACD,SAAS,IAAI,EAAE,CAAC;QAExDR,UAAU,CAAC,sCAAsC,CAAC;QAClDF,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACL,MAAM,IAAI4C,KAAK,CAAC,kCAAkC,CAAC;MACrD;IACF,CAAC,CAAC,OAAO7B,GAAG,EAAE;MACZC,OAAO,CAACjB,KAAK,CAAC,gCAAgC,EAAEgB,GAAG,CAAC;MACpDf,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;EAGD,oBAAQhB,OAAA;IAAAmE,QAAA,gBACNnE,OAAA;MAAAmE,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BxD,KAAK,iBAAIf,OAAA;MAAGwE,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEpD;IAAK;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDtD,OAAO,iBAAIjB,OAAA;MAAGwE,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAElD;IAAO;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvDvE,OAAA;MAAAmE,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,eACEnE,OAAA;UAAAmE,QAAA,gBACEnE,OAAA;YAAAmE,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACXvE,OAAA;YAAAmE,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBvE,OAAA;YAAAmE,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBvE,OAAA;YAAAmE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvE,OAAA;YAAAmE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvE,OAAA;YAAAmE,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZvE,OAAA;YAAAmE,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbvE,OAAA;YAAAmE,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvE,OAAA;QAAAmE,QAAA,EACGhD,MAAM,CAACuD,GAAG,CAAEC,KAAK,iBAChB3E,OAAA;UAAAmE,QAAA,gBACEnE,OAAA;YAAAmE,QAAA,EAAKQ,KAAK,CAAC/B;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBvE,OAAA;YAAAmE,QAAA,EAAKQ,KAAK,CAAC7B;UAAS;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BvE,OAAA;YAAAmE,QAAA,EAAKQ,KAAK,CAAC5B;UAAQ;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBvE,OAAA;YAAAmE,QAAA,EAAKQ,KAAK,CAAC3B;UAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBvE,OAAA;YAAAmE,QAAA,EAAK,GAAG,CAACS,MAAM,CAACD,KAAK,CAACE,QAAQ,CAACC,MAAM;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5CvE,OAAA;YAAAmE,QAAA,EAAK,GAAG,CAACS,MAAM,CAACD,KAAK,CAACI,GAAG,CAACD,MAAM;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvCvE,OAAA;YAAAmE,QAAA,EAAKQ,KAAK,CAAC7C;UAAY;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BvE,OAAA;YAAAmE,QAAA,gBACEnE,OAAA;cAAQgF,OAAO,EAAEA,CAAA,KAAMlE,UAAU,CAAC6D,KAAK,CAAE;cAAAR,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvDvE,OAAA;cAAQgF,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACc,KAAK,CAAC/B,KAAK,CAAE;cAAAuB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC;QAAA,GAXEI,KAAK,CAAC/B,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGRvE,OAAA;MAAAmE,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,eACEnE,OAAA;UAAAmE,QAAA,gBACEnE,OAAA;YAAAmE,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACXvE,OAAA;YAAAmE,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBvE,OAAA;YAAAmE,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBvE,OAAA;YAAAmE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvE,OAAA;YAAAmE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvE,OAAA;YAAAmE,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZvE,OAAA;YAAAmE,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbvE,OAAA;YAAAmE,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvE,OAAA;QAAAmE,QAAA,EACG9C,KAAK,CAACqD,GAAG,CAAE7C,GAAG,iBACb7B,OAAA;UAAAmE,QAAA,gBACEnE,OAAA;YAAAmE,QAAA,EAAKtC,GAAG,CAACe;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBvE,OAAA;YAAAmE,QAAA,EAAKtC,GAAG,CAACiB;UAAS;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBvE,OAAA;YAAAmE,QAAA,EAAKtC,GAAG,CAACkB;UAAQ;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBvE,OAAA;YAAAmE,QAAA,EAAKtC,GAAG,CAACmB;UAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBvE,OAAA;YAAAmE,QAAA,EAAK,GAAG,CAACS,MAAM,CAAC/C,GAAG,CAACgD,QAAQ,CAACC,MAAM;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CvE,OAAA;YAAAmE,QAAA,EAAK,GAAG,CAACS,MAAM,CAAC/C,GAAG,CAACkD,GAAG,CAACD,MAAM;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrCvE,OAAA;YAAAmE,QAAA,EAAKtC,GAAG,CAACC;UAAY;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BvE,OAAA;YAAAmE,QAAA,gBACEnE,OAAA;cAAQgF,OAAO,EAAEA,CAAA,KAAMlE,UAAU,CAACe,GAAG,CAAE;cAAAsC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACrDvE,OAAA;cAAQgF,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAAChC,GAAG,CAACe,KAAK,CAAE;cAAAuB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE,CAAC;QAAA,GAXE1C,GAAG,CAACe,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER,CAAC;AAACrE,EAAA,CAxPID,qBAAqB;AAAAgF,EAAA,GAArBhF,qBAAqB;AA0P3B,eAAeA,qBAAqB;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}