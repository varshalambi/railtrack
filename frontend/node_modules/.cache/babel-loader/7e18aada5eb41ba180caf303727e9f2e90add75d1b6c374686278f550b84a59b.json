{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// // import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// // import Login from \"./pages/Login\";\n// // import AdminDashboard from \"./pages/AdminDashboard\";\n// // import RepresentativeDashboard from \"./pages/RepresentativeDashboard\";\n// // import CustomerDashboard from \"./pages/CustomerDashboard\";\n// // import ManageTrains from \"./pages/ManageTrains\";\n// // // import ManageTrainSchedules from './pages/ManageTrainSchedules';\n// // import ManageReservations from './pages/ManageReservations';\n// // import ViewCustomers from './pages/ViewCustomers';\n// // import ViewEmployees from './pages/ViewEmployees';\n// // import ManageRepresentatives from './pages/ManageRepresentatives';\n\n// // function App() {\n// //   const role = localStorage.getItem('role'); // Get role from localStorage\n// //   return (\n// //     <Router>\n// //       <Routes>\n// //         <Route path=\"/\" element={<Login />} />\n// //         <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n// //         <Route path=\"/representative-dashboard\" element={<RepresentativeDashboard />} />\n// //         <Route path=\"/customer-dashboard\" element={<CustomerDashboard />} />\n// //         <Route path=\"/manage-trains\" element={<ManageTrains />} />\n// //         {role === 'admin' && (\n// //           <>\n// //             <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n// //             {/* <Route path=\"/admin/train-schedules\" element={<ManageTrainSchedules />} /> */}\n// //             <Route path=\"/admin/reservations\" element={<ManageReservations />} />\n// //             <Route path=\"/admin/customers\" element={<ViewCustomers />} />\n// //             <Route path=\"/admin/employees\" element={<ViewEmployees />} />\n// //             <Route path=\"/admin/manage-representatives\" element={<ManageRepresentatives />} />\n// //           </>\n// //         )}\n// //       </Routes>\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Login from \"./pages/Login\";\n// import AdminDashboard from \"./pages/AdminDashboard\";\n// import RepresentativeDashboard from \"./pages/RepresentativeDashboard\";\n// import CustomerDashboard from \"./pages/CustomerDashboard\";\n// import ManageTrains from \"./pages/ManageTrains\";\n// import ManageReservations from './pages/ManageReservations';\n// import ViewCustomers from './pages/ViewCustomers';\n// import ViewEmployees from './pages/ViewEmployees';\n// import ManageRepresentatives from './pages/ManageRepresentatives';\n// import ManageSchedules from './pages/ManageSchedules';  // New - for managing train schedules\n// import ReplyQuestions from './pages/ReplyQuestions'; // New - for replying to customer questions\n\n// function App() {\n//   const role = localStorage.getItem('role'); // Get role from localStorage after login\n\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n\n//         {/* Admin Routes */}\n//         {role === 'admin' && (\n//           <>\n//             <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n//             <Route path=\"/admin/reservations\" element={<ManageReservations />} />\n//             <Route path=\"/admin/customers\" element={<ViewCustomers />} />\n//             <Route path=\"/admin/employees\" element={<ViewEmployees />} />\n//             <Route path=\"/admin/manage-representatives\" element={<ManageRepresentatives />} />\n//           </>\n//         )}\n\n//         {/* Customer Representative Routes */}\n//         {role === 'staff' && (\n//           <>\n//             <Route path=\"/representative-dashboard\" element={<RepresentativeDashboard />} />\n//             <Route path=\"/manage-trains\" element={<ManageTrains />} />\n//             <Route path=\"/manage-schedules\" element={<ManageSchedules />} />\n//             <Route path=\"/reply-questions\" element={<ReplyQuestions />} />\n//             <Route path=\"/view-customers\" element={<ViewCustomers />} />\n//           </>\n//         )}\n\n//         {/* Customer Routes */}\n//         {role === 'customer' && (\n//           <Route path=\"/customer-dashboard\" element={<CustomerDashboard />} />\n//         )}\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\nimport RepresentativeDashboard from \"./pages/RepresentativeDashboard\";\nimport CustomerDashboard from \"./pages/CustomerDashboard\";\nimport ManageTrains from \"./pages/ManageTrains\";\nimport ManageReservations from './pages/ManageReservations';\nimport ViewCustomers from './pages/ViewCustomers';\nimport ViewEmployees from './pages/ViewEmployees';\nimport ManageRepresentatives from './pages/ManageRepresentatives';\nimport ManageSchedules from './pages/ManageSchedules';\nimport ReplyQuestions from './pages/ReplyQuestions';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const role = localStorage.getItem('role'); // Get role from localStorage after login\n  const navigate = useNavigate(); // Hook to navigate programmatically\n\n  // Function to handle logout\n  const handleLogout = () => {\n    localStorage.clear(); // Clear all local storage items (including token and role)\n    navigate('/'); // Redirect to login page\n  };\n\n  // Automatically redirect to login if no role is found\n  useEffect(() => {\n    if (!role) {\n      navigate('/');\n    }\n  }, [role, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [role && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        position: 'absolute',\n        top: 10,\n        right: 10\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), role === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/reservations\",\n            element: /*#__PURE__*/_jsxDEV(ManageReservations, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/customers\",\n            element: /*#__PURE__*/_jsxDEV(ViewCustomers, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/employees\",\n            element: /*#__PURE__*/_jsxDEV(ViewEmployees, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/manage-representatives\",\n            element: /*#__PURE__*/_jsxDEV(ManageRepresentatives, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), role === 'staff' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/representative-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(RepresentativeDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/manage-trains\",\n            element: /*#__PURE__*/_jsxDEV(ManageTrains, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/manage-schedules\",\n            element: /*#__PURE__*/_jsxDEV(ManageSchedules, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/reply-questions\",\n            element: /*#__PURE__*/_jsxDEV(ReplyQuestions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/view-customers\",\n            element: /*#__PURE__*/_jsxDEV(ViewCustomers, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), role === 'customer' && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/customer-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(CustomerDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useNavigate","Login","AdminDashboard","RepresentativeDashboard","CustomerDashboard","ManageTrains","ManageReservations","ViewCustomers","ViewEmployees","ManageRepresentatives","ManageSchedules","ReplyQuestions","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","role","localStorage","getItem","navigate","handleLogout","clear","children","onClick","style","position","top","right","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/App.js"],"sourcesContent":["// // import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// // import Login from \"./pages/Login\";\n// // import AdminDashboard from \"./pages/AdminDashboard\";\n// // import RepresentativeDashboard from \"./pages/RepresentativeDashboard\";\n// // import CustomerDashboard from \"./pages/CustomerDashboard\";\n// // import ManageTrains from \"./pages/ManageTrains\";\n// // // import ManageTrainSchedules from './pages/ManageTrainSchedules';\n// // import ManageReservations from './pages/ManageReservations';\n// // import ViewCustomers from './pages/ViewCustomers';\n// // import ViewEmployees from './pages/ViewEmployees';\n// // import ManageRepresentatives from './pages/ManageRepresentatives';\n\n// // function App() {\n// //   const role = localStorage.getItem('role'); // Get role from localStorage\n// //   return (\n// //     <Router>\n// //       <Routes>\n// //         <Route path=\"/\" element={<Login />} />\n// //         <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n// //         <Route path=\"/representative-dashboard\" element={<RepresentativeDashboard />} />\n// //         <Route path=\"/customer-dashboard\" element={<CustomerDashboard />} />\n// //         <Route path=\"/manage-trains\" element={<ManageTrains />} />\n// //         {role === 'admin' && (\n// //           <>\n// //             <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n// //             {/* <Route path=\"/admin/train-schedules\" element={<ManageTrainSchedules />} /> */}\n// //             <Route path=\"/admin/reservations\" element={<ManageReservations />} />\n// //             <Route path=\"/admin/customers\" element={<ViewCustomers />} />\n// //             <Route path=\"/admin/employees\" element={<ViewEmployees />} />\n// //             <Route path=\"/admin/manage-representatives\" element={<ManageRepresentatives />} />\n// //           </>\n// //         )}\n// //       </Routes>\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n\n\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Login from \"./pages/Login\";\n// import AdminDashboard from \"./pages/AdminDashboard\";\n// import RepresentativeDashboard from \"./pages/RepresentativeDashboard\";\n// import CustomerDashboard from \"./pages/CustomerDashboard\";\n// import ManageTrains from \"./pages/ManageTrains\";\n// import ManageReservations from './pages/ManageReservations';\n// import ViewCustomers from './pages/ViewCustomers';\n// import ViewEmployees from './pages/ViewEmployees';\n// import ManageRepresentatives from './pages/ManageRepresentatives';\n// import ManageSchedules from './pages/ManageSchedules';  // New - for managing train schedules\n// import ReplyQuestions from './pages/ReplyQuestions'; // New - for replying to customer questions\n\n// function App() {\n//   const role = localStorage.getItem('role'); // Get role from localStorage after login\n  \n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n\n//         {/* Admin Routes */}\n//         {role === 'admin' && (\n//           <>\n//             <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n//             <Route path=\"/admin/reservations\" element={<ManageReservations />} />\n//             <Route path=\"/admin/customers\" element={<ViewCustomers />} />\n//             <Route path=\"/admin/employees\" element={<ViewEmployees />} />\n//             <Route path=\"/admin/manage-representatives\" element={<ManageRepresentatives />} />\n//           </>\n//         )}\n\n//         {/* Customer Representative Routes */}\n//         {role === 'staff' && (\n//           <>\n//             <Route path=\"/representative-dashboard\" element={<RepresentativeDashboard />} />\n//             <Route path=\"/manage-trains\" element={<ManageTrains />} />\n//             <Route path=\"/manage-schedules\" element={<ManageSchedules />} />\n//             <Route path=\"/reply-questions\" element={<ReplyQuestions />} />\n//             <Route path=\"/view-customers\" element={<ViewCustomers />} />\n//           </>\n//         )}\n\n//         {/* Customer Routes */}\n//         {role === 'customer' && (\n//           <Route path=\"/customer-dashboard\" element={<CustomerDashboard />} />\n//         )}\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\nimport RepresentativeDashboard from \"./pages/RepresentativeDashboard\";\nimport CustomerDashboard from \"./pages/CustomerDashboard\";\nimport ManageTrains from \"./pages/ManageTrains\";\nimport ManageReservations from './pages/ManageReservations';\nimport ViewCustomers from './pages/ViewCustomers';\nimport ViewEmployees from './pages/ViewEmployees';\nimport ManageRepresentatives from './pages/ManageRepresentatives';\nimport ManageSchedules from './pages/ManageSchedules';\nimport ReplyQuestions from './pages/ReplyQuestions';\nimport { useEffect } from 'react';\n\nfunction App() {\n  const role = localStorage.getItem('role'); // Get role from localStorage after login\n  const navigate = useNavigate(); // Hook to navigate programmatically\n\n  // Function to handle logout\n  const handleLogout = () => {\n    localStorage.clear(); // Clear all local storage items (including token and role)\n    navigate('/'); // Redirect to login page\n  };\n\n  // Automatically redirect to login if no role is found\n  useEffect(() => {\n    if (!role) {\n      navigate('/');\n    }\n  }, [role, navigate]);\n\n  return (\n    <div>\n      {/* Global Logout Button */}\n      {role && (\n        <button onClick={handleLogout} style={{ position: 'absolute', top: 10, right: 10 }}>\n          Logout\n        </button>\n      )}\n\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n\n          {/* Admin Routes */}\n          {role === 'admin' && (\n            <>\n              <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n              <Route path=\"/admin/reservations\" element={<ManageReservations />} />\n              <Route path=\"/admin/customers\" element={<ViewCustomers />} />\n              <Route path=\"/admin/employees\" element={<ViewEmployees />} />\n              <Route path=\"/admin/manage-representatives\" element={<ManageRepresentatives />} />\n            </>\n          )}\n\n          {/* Customer Representative Routes */}\n          {role === 'staff' && (\n            <>\n              <Route path=\"/representative-dashboard\" element={<RepresentativeDashboard />} />\n              <Route path=\"/manage-trains\" element={<ManageTrains />} />\n              <Route path=\"/manage-schedules\" element={<ManageSchedules />} />\n              <Route path=\"/reply-questions\" element={<ReplyQuestions />} />\n              <Route path=\"/view-customers\" element={<ViewCustomers />} />\n            </>\n          )}\n\n          {/* Customer Routes */}\n          {role === 'customer' && (\n            <Route path=\"/customer-dashboard\" element={<CustomerDashboard />} />\n          )}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}