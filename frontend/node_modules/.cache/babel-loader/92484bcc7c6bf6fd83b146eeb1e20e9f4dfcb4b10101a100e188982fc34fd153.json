{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/TrainSchedulesTab.js\",\n  _s = $RefreshSig$();\n// // TrainSchedulesTab.js\n// import React, { useState } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const TrainSchedulesTab = ({ stations }) => {\n//   const [originStation, setOriginStation] = useState('');\n//   const [destinationStation, setDestinationStation] = useState('');\n//   const [travelDate, setTravelDate] = useState('');\n//   const [availableSchedules, setAvailableSchedules] = useState([]);\n//   const [error, setError] = useState('');\n\n//   const handleSearchSchedules = async () => {\n//     if (!originStation || !destinationStation || !travelDate) {\n//       setError('Please select all fields.');\n//       return;\n//     }\n//     try {\n//       const response = await axiosInstance.get('/customer/train-schedules', {\n//         params: {\n//           originStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setAvailableSchedules(response.data.trainSchedules);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching train schedules:', err);\n//       setError('Failed to fetch train schedules.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h3>Search & Book Train Schedules</h3>\n//       <div>\n//         <select\n//           value={originStation}\n//           onChange={(e) => setOriginStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Origin Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Destination Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button onClick={handleSearchSchedules}>Search Schedules</button>\n//       </div>\n\n//       {error && <p className=\"error\">{error}</p>}\n\n//       {availableSchedules.length > 0 && (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Schedule ID</th>\n//               <th>Transit Line Name</th>\n//               <th>Departure Time</th>\n//               <th>Arrival Time</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {availableSchedules.map((schedule) => (\n//               <tr key={schedule.ScheduleID}>\n//                 <td>{schedule.ScheduleID}</td>\n//                 <td>{schedule.TransitLineName}</td>\n//                 <td>{schedule.DepartureDateTime}</td>\n//                 <td>{schedule.ArrivalDateTime}</td>\n//                 <td>\n//                   <button>Book Now</button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TrainSchedulesTab;\n\n// import React, { useState } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const TrainSchedulesTab = ({ stations }) => {\n//   const [originStation, setOriginStation] = useState('');\n//   const [destinationStation, setDestinationStation] = useState('');\n//   const [travelDate, setTravelDate] = useState('');\n//   const [availableSchedules, setAvailableSchedules] = useState([]);\n//   const [error, setError] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const handleSearchSchedules = async () => {\n//     if (!originStation || !destinationStation || !travelDate) {\n//       setError('Please select all fields.');\n//       return;\n//     }\n//     try {\n//       const response = await axiosInstance.get('/customer/train-schedules', {\n//         params: {\n//           originStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setAvailableSchedules(response.data.trainSchedules);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching train schedules:', err);\n//       setError('Failed to fetch train schedules.');\n//     }\n//   };\n\n//   const handleBookNow = async (scheduleId) => {\n//     try {\n//       // Assuming the API takes `scheduleId` and creates a reservation\n//       await axiosInstance.post('/customer/reservations', {\n//         scheduleId,\n//         tripType: 'one-way', // or 'round-trip' depending on your logic\n//       });\n//       setSuccessMessage('Reservation successfully booked!');\n//       setError('');\n//     } catch (err) {\n//       console.error('Error booking reservation:', err);\n//       setError('Failed to book reservation.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h3>Search & Book Train Schedules</h3>\n//       <div>\n//         <select\n//           value={originStation}\n//           onChange={(e) => setOriginStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Origin Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Destination Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button onClick={handleSearchSchedules}>Search Schedules</button>\n//       </div>\n\n//       {error && <p className=\"error\">{error}</p>}\n//       {successMessage && <p className=\"success\">{successMessage}</p>}\n\n//       {availableSchedules.length > 0 && (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Schedule ID</th>\n//               <th>Transit Line Name</th>\n//               <th>Departure Time</th>\n//               <th>Arrival Time</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {availableSchedules.map((schedule) => (\n//               <tr key={schedule.ScheduleID}>\n//                 <td>{schedule.ScheduleID}</td>\n//                 <td>{schedule.TransitLineName}</td>\n//                 <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                 <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                 <td>\n//                   <button onClick={() => handleBookNow(schedule.ScheduleID)}>\n//                     Book Now\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TrainSchedulesTab;\n\n// TrainSchedulesTab.js\nimport React, { useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainSchedulesTab = ({\n  stations,\n  customerId\n}) => {\n  _s();\n  const [originStation, setOriginStation] = useState('');\n  const [destinationStation, setDestinationStation] = useState('');\n  const [travelDate, setTravelDate] = useState('');\n  const [availableSchedules, setAvailableSchedules] = useState([]);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSearchSchedules = async () => {\n    if (!originStation || !destinationStation || !travelDate) {\n      setError('Please select all fields.');\n      setSuccess('');\n      return;\n    }\n    try {\n      const response = await axiosInstance.get('/customer/train-schedules', {\n        params: {\n          originStation,\n          destinationStation,\n          travelDate\n        }\n      });\n      setAvailableSchedules(response.data.trainSchedules);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching train schedules:', err);\n      setError('Failed to fetch train schedules.');\n      setSuccess('');\n    }\n  };\n  const handleBookNow = async scheduleId => {\n    try {\n      const payload = {\n        customerId,\n        scheduleId,\n        originStation,\n        destinationStation,\n        tripType: 'one-way' // Adjust if you want to allow round-trip bookings\n      };\n      const response = await axiosInstance.post('/customer/reservations', payload);\n      setSuccess('Reservation successfully booked!');\n      setError('');\n    } catch (err) {\n      console.error('Error booking reservation:', err);\n      setError('Failed to book reservation.');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search & Book Train Schedules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: originStation,\n        onChange: e => setOriginStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Origin Station\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: destinationStation,\n        onChange: e => setDestinationStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Destination Station\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: travelDate,\n        onChange: e => setTravelDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearchSchedules,\n        children: \"Search Schedules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 19\n    }, this), availableSchedules.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Schedule ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transit Line Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arrival Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: availableSchedules.map(schedule => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: schedule.ScheduleID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: schedule.TransitLineName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: schedule.DepartureDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: schedule.ArrivalDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookNow(schedule.ScheduleID),\n              children: \"Book Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this)]\n        }, schedule.ScheduleID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainSchedulesTab, \"sNTyD8knW0O05a3dM3J7bmVkXe4=\");\n_c = TrainSchedulesTab;\nexport default TrainSchedulesTab;\nvar _c;\n$RefreshReg$(_c, \"TrainSchedulesTab\");","map":{"version":3,"names":["React","useState","axiosInstance","jsxDEV","_jsxDEV","TrainSchedulesTab","stations","customerId","_s","originStation","setOriginStation","destinationStation","setDestinationStation","travelDate","setTravelDate","availableSchedules","setAvailableSchedules","error","setError","success","setSuccess","handleSearchSchedules","response","get","params","data","trainSchedules","err","console","handleBookNow","scheduleId","payload","tripType","post","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","station","StationName","StationID","type","onClick","className","length","schedule","ScheduleID","TransitLineName","DepartureDateTime","ArrivalDateTime","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/tabs/TrainSchedulesTab.js"],"sourcesContent":["\n// // TrainSchedulesTab.js\n// import React, { useState } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const TrainSchedulesTab = ({ stations }) => {\n//   const [originStation, setOriginStation] = useState('');\n//   const [destinationStation, setDestinationStation] = useState('');\n//   const [travelDate, setTravelDate] = useState('');\n//   const [availableSchedules, setAvailableSchedules] = useState([]);\n//   const [error, setError] = useState('');\n\n//   const handleSearchSchedules = async () => {\n//     if (!originStation || !destinationStation || !travelDate) {\n//       setError('Please select all fields.');\n//       return;\n//     }\n//     try {\n//       const response = await axiosInstance.get('/customer/train-schedules', {\n//         params: {\n//           originStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setAvailableSchedules(response.data.trainSchedules);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching train schedules:', err);\n//       setError('Failed to fetch train schedules.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h3>Search & Book Train Schedules</h3>\n//       <div>\n//         <select\n//           value={originStation}\n//           onChange={(e) => setOriginStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Origin Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Destination Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button onClick={handleSearchSchedules}>Search Schedules</button>\n//       </div>\n\n//       {error && <p className=\"error\">{error}</p>}\n\n//       {availableSchedules.length > 0 && (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Schedule ID</th>\n//               <th>Transit Line Name</th>\n//               <th>Departure Time</th>\n//               <th>Arrival Time</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {availableSchedules.map((schedule) => (\n//               <tr key={schedule.ScheduleID}>\n//                 <td>{schedule.ScheduleID}</td>\n//                 <td>{schedule.TransitLineName}</td>\n//                 <td>{schedule.DepartureDateTime}</td>\n//                 <td>{schedule.ArrivalDateTime}</td>\n//                 <td>\n//                   <button>Book Now</button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TrainSchedulesTab;\n\n// import React, { useState } from 'react';\n// import axiosInstance from '../utils/axiosInstance';\n\n// const TrainSchedulesTab = ({ stations }) => {\n//   const [originStation, setOriginStation] = useState('');\n//   const [destinationStation, setDestinationStation] = useState('');\n//   const [travelDate, setTravelDate] = useState('');\n//   const [availableSchedules, setAvailableSchedules] = useState([]);\n//   const [error, setError] = useState('');\n//   const [successMessage, setSuccessMessage] = useState('');\n\n//   const handleSearchSchedules = async () => {\n//     if (!originStation || !destinationStation || !travelDate) {\n//       setError('Please select all fields.');\n//       return;\n//     }\n//     try {\n//       const response = await axiosInstance.get('/customer/train-schedules', {\n//         params: {\n//           originStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setAvailableSchedules(response.data.trainSchedules);\n//       setError('');\n//     } catch (err) {\n//       console.error('Error fetching train schedules:', err);\n//       setError('Failed to fetch train schedules.');\n//     }\n//   };\n\n//   const handleBookNow = async (scheduleId) => {\n//     try {\n//       // Assuming the API takes `scheduleId` and creates a reservation\n//       await axiosInstance.post('/customer/reservations', {\n//         scheduleId,\n//         tripType: 'one-way', // or 'round-trip' depending on your logic\n//       });\n//       setSuccessMessage('Reservation successfully booked!');\n//       setError('');\n//     } catch (err) {\n//       console.error('Error booking reservation:', err);\n//       setError('Failed to book reservation.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h3>Search & Book Train Schedules</h3>\n//       <div>\n//         <select\n//           value={originStation}\n//           onChange={(e) => setOriginStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Origin Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">Select Destination Station</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button onClick={handleSearchSchedules}>Search Schedules</button>\n//       </div>\n\n//       {error && <p className=\"error\">{error}</p>}\n//       {successMessage && <p className=\"success\">{successMessage}</p>}\n\n//       {availableSchedules.length > 0 && (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Schedule ID</th>\n//               <th>Transit Line Name</th>\n//               <th>Departure Time</th>\n//               <th>Arrival Time</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {availableSchedules.map((schedule) => (\n//               <tr key={schedule.ScheduleID}>\n//                 <td>{schedule.ScheduleID}</td>\n//                 <td>{schedule.TransitLineName}</td>\n//                 <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                 <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                 <td>\n//                   <button onClick={() => handleBookNow(schedule.ScheduleID)}>\n//                     Book Now\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TrainSchedulesTab;\n\n// TrainSchedulesTab.js\nimport React, { useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\nconst TrainSchedulesTab = ({ stations, customerId }) => {\n  const [originStation, setOriginStation] = useState('');\n  const [destinationStation, setDestinationStation] = useState('');\n  const [travelDate, setTravelDate] = useState('');\n  const [availableSchedules, setAvailableSchedules] = useState([]);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleSearchSchedules = async () => {\n    if (!originStation || !destinationStation || !travelDate) {\n      setError('Please select all fields.');\n      setSuccess('');\n      return;\n    }\n    try {\n      const response = await axiosInstance.get('/customer/train-schedules', {\n        params: {\n          originStation,\n          destinationStation,\n          travelDate,\n        },\n      });\n      setAvailableSchedules(response.data.trainSchedules);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching train schedules:', err);\n      setError('Failed to fetch train schedules.');\n      setSuccess('');\n    }\n  };\n\n  const handleBookNow = async (scheduleId) => {\n    try {\n      const payload = {\n        customerId,\n        scheduleId,\n        originStation,\n        destinationStation,\n        tripType: 'one-way', // Adjust if you want to allow round-trip bookings\n      };\n      const response = await axiosInstance.post('/customer/reservations', payload);\n      setSuccess('Reservation successfully booked!');\n      setError('');\n    } catch (err) {\n      console.error('Error booking reservation:', err);\n      setError('Failed to book reservation.');\n      setSuccess('');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Search & Book Train Schedules</h3>\n      <div>\n        <select\n          value={originStation}\n          onChange={(e) => setOriginStation(e.target.value)}\n        >\n          <option value=\"\">Select Origin Station</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n        <select\n          value={destinationStation}\n          onChange={(e) => setDestinationStation(e.target.value)}\n        >\n          <option value=\"\">Select Destination Station</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"date\"\n          value={travelDate}\n          onChange={(e) => setTravelDate(e.target.value)}\n        />\n        <button onClick={handleSearchSchedules}>Search Schedules</button>\n      </div>\n\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n\n      {availableSchedules.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Schedule ID</th>\n              <th>Transit Line Name</th>\n              <th>Departure Time</th>\n              <th>Arrival Time</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {availableSchedules.map((schedule) => (\n              <tr key={schedule.ScheduleID}>\n                <td>{schedule.ScheduleID}</td>\n                <td>{schedule.TransitLineName}</td>\n                <td>{schedule.DepartureDateTime}</td>\n                <td>{schedule.ArrivalDateTime}</td>\n                <td>\n                  <button onClick={() => handleBookNow(schedule.ScheduleID)}>\n                    Book Now\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default TrainSchedulesTab;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}