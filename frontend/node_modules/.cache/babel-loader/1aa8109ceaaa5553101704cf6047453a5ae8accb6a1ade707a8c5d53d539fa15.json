{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch stations from the backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchStations();\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div id=\"real-time-clock\"></div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n\n//         <button className=\"search-button\">Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\"; // Import the CSS file for styling\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations from backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Train Search Container */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n//         <button className=\"search-button\">Search</button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Fetch train schedules\n//   const handleSearch = async () => {\n//     if (!sourceStation || !destinationStation || !travelDate) {\n//       setError(\"Please fill all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear error\n\n//     try {\n//       const response = await axiosInstance.get(\"/train-schedules\", {\n//         params: {\n//           originStation: sourceStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setSchedules(response.data.trainSchedules);\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"No train schedules available.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Search Form */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n\n//       {/* Display Schedules */}\n//       {schedules.length > 0 && (\n//         <div className=\"schedules-table\">\n//           <h2>Available Train Schedules</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Train ID</th>\n//                 <th>Transit Line</th>\n//                 <th>Departure Time</th>\n//                 <th>Arrival Time</th>\n//                 <th>Travel Time</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {schedules.map((schedule) => (\n//                 <tr key={schedule.ScheduleID}>\n//                   <td>{schedule.TrainID}</td>\n//                   <td>{schedule.TransitLineName}</td>\n//                   <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                   <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                   <td>{schedule.TravelTime}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport \"../styles/MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [sourceStation, setSourceStation] = useState(\"\");\n  const [destinationStation, setDestinationStation] = useState(\"\");\n  const [travelDate, setTravelDate] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  // Fetch stations\n  useEffect(() => {\n    const fetchStations = async () => {\n      try {\n        const response = await axiosInstance.get(\"/stations\");\n        setStations(response.data.stations);\n      } catch (err) {\n        console.error(\"Error fetching stations:\", err);\n        setError(\"Failed to load stations.\");\n      }\n    };\n    fetchStations();\n\n    // Real-time clock\n    const interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSearch = async () => {\n    if (!sourceStation || !destinationStation || !travelDate) {\n      setError(\"Please select all fields.\");\n      return;\n    }\n    setError(\"\"); // Clear any previous errors\n\n    try {\n      const response = await axiosInstance.get(\"/train-schedules\", {\n        params: {\n          sourceStation,\n          destinationStation,\n          travelDate\n        }\n      });\n      console.log(\"Train Schedules:\", response.data.schedules);\n      // Here you can set state to display the schedules in a table\n    } catch (err) {\n      console.error(\"Error fetching train schedules:\", err);\n      setError(\"Failed to fetch train schedules.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Railway Reservation System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"real-time-clock\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Train\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sourceStation,\n        onChange: e => setSourceStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Source Station--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: destinationStation,\n        onChange: e => setDestinationStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Destination Station--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: travelDate,\n        onChange: e => setTravelDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"gEa7FcNB9K7kSEmub9RMss9ePP8=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","MainPage","_s","stations","setStations","sourceStation","setSourceStation","destinationStation","setDestinationStation","travelDate","setTravelDate","error","setError","time","setTime","fetchStations","response","get","data","err","console","interval","setInterval","Date","toLocaleTimeString","clearInterval","handleSearch","params","log","schedules","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","value","onChange","e","target","map","station","StationName","StationID","type","onClick","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/MainPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch stations from the backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchStations();\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div id=\"real-time-clock\"></div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n\n//         <button className=\"search-button\">Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\"; // Import the CSS file for styling\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations from backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Train Search Container */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n//         <button className=\"search-button\">Search</button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Fetch train schedules\n//   const handleSearch = async () => {\n//     if (!sourceStation || !destinationStation || !travelDate) {\n//       setError(\"Please fill all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear error\n\n//     try {\n//       const response = await axiosInstance.get(\"/train-schedules\", {\n//         params: {\n//           originStation: sourceStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setSchedules(response.data.trainSchedules);\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"No train schedules available.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Search Form */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n\n//       {/* Display Schedules */}\n//       {schedules.length > 0 && (\n//         <div className=\"schedules-table\">\n//           <h2>Available Train Schedules</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Train ID</th>\n//                 <th>Transit Line</th>\n//                 <th>Departure Time</th>\n//                 <th>Arrival Time</th>\n//                 <th>Travel Time</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {schedules.map((schedule) => (\n//                 <tr key={schedule.ScheduleID}>\n//                   <td>{schedule.TrainID}</td>\n//                   <td>{schedule.TransitLineName}</td>\n//                   <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                   <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                   <td>{schedule.TravelTime}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport \"../styles/MainPage.css\";\n\nconst MainPage = () => {\n  const [stations, setStations] = useState([]);\n  const [sourceStation, setSourceStation] = useState(\"\");\n  const [destinationStation, setDestinationStation] = useState(\"\");\n  const [travelDate, setTravelDate] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  // Fetch stations\n  useEffect(() => {\n    const fetchStations = async () => {\n      try {\n        const response = await axiosInstance.get(\"/stations\");\n        setStations(response.data.stations);\n      } catch (err) {\n        console.error(\"Error fetching stations:\", err);\n        setError(\"Failed to load stations.\");\n      }\n    };\n    fetchStations();\n\n    // Real-time clock\n    const interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSearch = async () => {\n    if (!sourceStation || !destinationStation || !travelDate) {\n      setError(\"Please select all fields.\");\n      return;\n    }\n    setError(\"\"); // Clear any previous errors\n  \n    try {\n      const response = await axiosInstance.get(\"/train-schedules\", {\n        params: {\n          sourceStation,\n          destinationStation,\n          travelDate,\n        },\n      });\n      console.log(\"Train Schedules:\", response.data.schedules);\n      // Here you can set state to display the schedules in a table\n    } catch (err) {\n      console.error(\"Error fetching train schedules:\", err);\n      setError(\"Failed to fetch train schedules.\");\n    }\n  };\n  \n\n  return (\n    <div className=\"main-page\">\n      <header className=\"header\">\n        <h1>Railway Reservation System</h1>\n        <div className=\"header-actions\">\n          <a href=\"/login\">Sign In</a>\n          <a href=\"/signup\">Sign Up</a>\n        </div>\n        <div className=\"real-time-clock\">{time}</div>\n      </header>\n\n      <div className=\"search-container\">\n        <h2>Search Train</h2>\n        <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n          <option value=\"\">--Source Station--</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n\n        <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n          <option value=\"\">--Destination Station--</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n\n        <input\n          type=\"date\"\n          value={travelDate}\n          onChange={(e) => setTravelDate(e.target.value)}\n        />\n        <button className=\"search-button\" onClick={handleSearch}>\n          Search\n        </button>\n\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,aAAa,CAACmB,GAAG,CAAC,WAAW,CAAC;QACrDb,WAAW,CAACY,QAAQ,CAACE,IAAI,CAACf,QAAQ,CAAC;MACrC,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACZC,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEQ,GAAG,CAAC;QAC9CP,QAAQ,CAAC,0BAA0B,CAAC;MACtC;IACF,CAAC;IACDG,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCR,OAAO,CAAC,IAAIS,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC1C,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACrB,aAAa,IAAI,CAACE,kBAAkB,IAAI,CAACE,UAAU,EAAE;MACxDG,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IACAA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMlB,aAAa,CAACmB,GAAG,CAAC,kBAAkB,EAAE;QAC3DU,MAAM,EAAE;UACNtB,aAAa;UACbE,kBAAkB;UAClBE;QACF;MACF,CAAC,CAAC;MACFW,OAAO,CAACQ,GAAG,CAAC,kBAAkB,EAAEZ,QAAQ,CAACE,IAAI,CAACW,SAAS,CAAC;MACxD;IACF,CAAC,CAAC,OAAOV,GAAG,EAAE;MACZC,OAAO,CAACT,KAAK,CAAC,iCAAiC,EAAEQ,GAAG,CAAC;MACrDP,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;EAGD,oBACEZ,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB/B,OAAA;MAAQ8B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACxB/B,OAAA;QAAA+B,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCnC,OAAA;QAAK8B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B/B,OAAA;UAAGoC,IAAI,EAAC,QAAQ;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC5BnC,OAAA;UAAGoC,IAAI,EAAC,SAAS;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAElB;MAAI;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAETnC,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B/B,OAAA;QAAA+B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBnC,OAAA;QAAQqC,KAAK,EAAEhC,aAAc;QAACiC,QAAQ,EAAGC,CAAC,IAAKjC,gBAAgB,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAN,QAAA,gBAC9E/B,OAAA;UAAQqC,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC3ChC,QAAQ,CAACsC,GAAG,CAAEC,OAAO,iBACpB1C,OAAA;UAAgCqC,KAAK,EAAEK,OAAO,CAACC,WAAY;UAAAZ,QAAA,EACxDW,OAAO,CAACC;QAAW,GADTD,OAAO,CAACE,SAAS;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETnC,OAAA;QAAQqC,KAAK,EAAE9B,kBAAmB;QAAC+B,QAAQ,EAAGC,CAAC,IAAK/B,qBAAqB,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAN,QAAA,gBACxF/B,OAAA;UAAQqC,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAChDhC,QAAQ,CAACsC,GAAG,CAAEC,OAAO,iBACpB1C,OAAA;UAAgCqC,KAAK,EAAEK,OAAO,CAACC,WAAY;UAAAZ,QAAA,EACxDW,OAAO,CAACC;QAAW,GADTD,OAAO,CAACE,SAAS;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETnC,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXR,KAAK,EAAE5B,UAAW;QAClB6B,QAAQ,EAAGC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFnC,OAAA;QAAQ8B,SAAS,EAAC,eAAe;QAACgB,OAAO,EAAEpB,YAAa;QAAAK,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERxB,KAAK,iBAAIX,OAAA;QAAG8B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEpB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CAhGID,QAAQ;AAAA8C,EAAA,GAAR9C,QAAQ;AAkGd,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}