{"ast":null,"code":"// src/utils/axiosInstance.js\nimport axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'https://b872-2401-4900-889d-3dd8-4c5a-eebf-c44c-504a.ngrok-free.app/api' // Replace with your backend base URL\n});\n\n// Add a request interceptor to include the token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Get token from localStorage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Set token in headers\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/utils/axiosInstance.js"],"sourcesContent":["// src/utils/axiosInstance.js\nimport axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://b872-2401-4900-889d-3dd8-4c5a-eebf-c44c-504a.ngrok-free.app/api', // Replace with your backend base URL\n});\n\n// Add a request interceptor to include the token\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token'); // Get token from localStorage\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`; // Set token in headers\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,yEAAyE,CAAE;AACtF,CAAC,CAAC;;AAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}