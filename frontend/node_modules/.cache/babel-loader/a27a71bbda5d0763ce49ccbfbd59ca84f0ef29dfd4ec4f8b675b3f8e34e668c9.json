{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch stations from the backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchStations();\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div id=\"real-time-clock\"></div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n\n//         <button className=\"search-button\">Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\"; // Import the CSS file for styling\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations from backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Train Search Container */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n//         <button className=\"search-button\">Search</button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport \"./MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [sourceStation, setSourceStation] = useState(\"\");\n  const [destinationStation, setDestinationStation] = useState(\"\");\n  const [travelDate, setTravelDate] = useState(\"\");\n  const [schedules, setSchedules] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  // Fetch stations\n  const fetchStations = async () => {\n    try {\n      const response = await axiosInstance.get(\"/api/stations\");\n      setStations(response.data.stations);\n    } catch (err) {\n      console.error(\"Error fetching stations:\", err);\n      setError(\"Failed to load stations. Please try again.\");\n    }\n  };\n\n  // Real-time clock\n  useEffect(() => {\n    fetchStations();\n    const interval = setInterval(() => {\n      const now = new Date();\n      setTime(now.toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch train schedules\n  const handleSearch = async () => {\n    if (!sourceStation || !destinationStation || !travelDate) {\n      setError(\"Please fill all fields.\");\n      return;\n    }\n    setError(\"\"); // Clear error\n\n    try {\n      const response = await axiosInstance.get(\"/api/train-schedules\", {\n        params: {\n          originStation: sourceStation,\n          destinationStation,\n          travelDate\n        }\n      });\n      setSchedules(response.data.trainSchedules);\n    } catch (err) {\n      console.error(\"Error fetching train schedules:\", err);\n      setError(\"No train schedules available.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Railway Reservation System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"real-time-clock\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Train\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sourceStation,\n        onChange: e => setSourceStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Source Station--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: destinationStation,\n        onChange: e => setDestinationStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Destination Station--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: travelDate,\n        onChange: e => setTravelDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), schedules.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedules-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Train Schedules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Train ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transit Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Travel Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: schedules.map(schedule => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.TrainID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.TransitLineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(schedule.DepartureDateTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(schedule.ArrivalDateTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.TravelTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, schedule.ScheduleID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"L6GbV8DenoXMvfEzs1fDZ3BRonU=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","MainPage","_s","stations","setStations","sourceStation","setSourceStation","destinationStation","setDestinationStation","travelDate","setTravelDate","schedules","setSchedules","error","setError","time","setTime","fetchStations","response","get","data","err","console","interval","setInterval","now","Date","toLocaleTimeString","clearInterval","handleSearch","params","originStation","trainSchedules","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","value","onChange","e","target","map","station","StationName","StationID","type","onClick","length","schedule","TrainID","TransitLineName","DepartureDateTime","toLocaleString","ArrivalDateTime","TravelTime","ScheduleID","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/MainPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch stations from the backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchStations();\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div id=\"real-time-clock\"></div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n\n//         <button className=\"search-button\">Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\"; // Import the CSS file for styling\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations from backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Train Search Container */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n//         <button className=\"search-button\">Search</button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport \"./MainPage.css\";\n\nconst MainPage = () => {\n  const [stations, setStations] = useState([]);\n  const [sourceStation, setSourceStation] = useState(\"\");\n  const [destinationStation, setDestinationStation] = useState(\"\");\n  const [travelDate, setTravelDate] = useState(\"\");\n  const [schedules, setSchedules] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  // Fetch stations\n  const fetchStations = async () => {\n    try {\n      const response = await axiosInstance.get(\"/api/stations\");\n      setStations(response.data.stations);\n    } catch (err) {\n      console.error(\"Error fetching stations:\", err);\n      setError(\"Failed to load stations. Please try again.\");\n    }\n  };\n\n  // Real-time clock\n  useEffect(() => {\n    fetchStations();\n    const interval = setInterval(() => {\n      const now = new Date();\n      setTime(now.toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch train schedules\n  const handleSearch = async () => {\n    if (!sourceStation || !destinationStation || !travelDate) {\n      setError(\"Please fill all fields.\");\n      return;\n    }\n    setError(\"\"); // Clear error\n\n    try {\n      const response = await axiosInstance.get(\"/api/train-schedules\", {\n        params: {\n          originStation: sourceStation,\n          destinationStation,\n          travelDate,\n        },\n      });\n      setSchedules(response.data.trainSchedules);\n    } catch (err) {\n      console.error(\"Error fetching train schedules:\", err);\n      setError(\"No train schedules available.\");\n    }\n  };\n\n  return (\n    <div className=\"main-page\">\n      {/* Header */}\n      <header className=\"header\">\n        <h1>Railway Reservation System</h1>\n        <div className=\"header-actions\">\n          <a href=\"/login\">Sign In</a>\n          <a href=\"/signup\">Sign Up</a>\n        </div>\n        <div className=\"real-time-clock\">{time}</div>\n      </header>\n\n      {/* Search Form */}\n      <div className=\"search-container\">\n        <h2>Search Train</h2>\n        <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n          <option value=\"\">--Source Station--</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n\n        <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n          <option value=\"\">--Destination Station--</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n\n        <input\n          type=\"date\"\n          value={travelDate}\n          onChange={(e) => setTravelDate(e.target.value)}\n        />\n        <button className=\"search-button\" onClick={handleSearch}>Search</button>\n\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n\n      {/* Display Schedules */}\n      {schedules.length > 0 && (\n        <div className=\"schedules-table\">\n          <h2>Available Train Schedules</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Train ID</th>\n                <th>Transit Line</th>\n                <th>Departure Time</th>\n                <th>Arrival Time</th>\n                <th>Travel Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {schedules.map((schedule) => (\n                <tr key={schedule.ScheduleID}>\n                  <td>{schedule.TrainID}</td>\n                  <td>{schedule.TransitLineName}</td>\n                  <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n                  <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n                  <td>{schedule.TravelTime}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}