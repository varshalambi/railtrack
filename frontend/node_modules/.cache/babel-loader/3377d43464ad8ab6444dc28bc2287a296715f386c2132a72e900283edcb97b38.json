{"ast":null,"code":"var _jsxFileName = \"/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch stations from the backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchStations();\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div id=\"real-time-clock\"></div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n\n//         <button className=\"search-button\">Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\"; // Import the CSS file for styling\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations from backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Train Search Container */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n//         <button className=\"search-button\">Search</button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Fetch train schedules\n//   const handleSearch = async () => {\n//     if (!sourceStation || !destinationStation || !travelDate) {\n//       setError(\"Please fill all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear error\n\n//     try {\n//       const response = await axiosInstance.get(\"/train-schedules\", {\n//         params: {\n//           originStation: sourceStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setSchedules(response.data.trainSchedules);\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"No train schedules available.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Search Form */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n\n//       {/* Display Schedules */}\n//       {schedules.length > 0 && (\n//         <div className=\"schedules-table\">\n//           <h2>Available Train Schedules</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Train ID</th>\n//                 <th>Transit Line</th>\n//                 <th>Departure Time</th>\n//                 <th>Arrival Time</th>\n//                 <th>Travel Time</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {schedules.map((schedule) => (\n//                 <tr key={schedule.ScheduleID}>\n//                   <td>{schedule.TrainID}</td>\n//                   <td>{schedule.TransitLineName}</td>\n//                   <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                   <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                   <td>{schedule.TravelTime}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations\n//   useEffect(() => {\n//     const fetchStations = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/stations\");\n//         setStations(response.data.stations);\n//       } catch (err) {\n//         console.error(\"Error fetching stations:\", err);\n//         setError(\"Failed to load stations.\");\n//       }\n//     };\n//     fetchStations();\n\n//     // Real-time clock\n//     const interval = setInterval(() => {\n//       setTime(new Date().toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearch = async () => {\n//     if (!sourceStation || !destinationStation || !travelDate) {\n//       setError(\"Please select all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear any previous errors\n\n//     try {\n//       const response = await axiosInstance.get(\"/mainPage/train-schedules\", {\n//         params: {\n//           sourceStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       console.log(\"Train Schedules:\", response.data.schedules);\n//       // Here you can set state to display the schedules in a table\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"Failed to fetch train schedules.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"../styles.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [originStation, setOriginStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch available stations\n//   useEffect(() => {\n//     const fetchStations = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:3000/api/stations\");\n//         setStations(response.data.stations);\n//       } catch (err) {\n//         console.error(\"Error fetching stations:\", err);\n//       }\n//     };\n//     fetchStations();\n//   }, []);\n\n//   // Handle Search Train Schedules\n//   const handleSearch = async () => {\n//     if (!originStation || !destinationStation || !travelDate) {\n//       setError(\"Please select all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear any previous errors\n\n//     try {\n//       const response = await axios.get(\n//         \"http://localhost:3000/api/mainPage/train-schedules\",\n//         {\n//           params: {\n//             originStation,\n//             destinationStation,\n//             travelDate,\n//           },\n//         }\n//       );\n//       setSchedules(response.data.trainSchedules);\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"Failed to fetch train schedules. Try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       <div className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-links\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"time\">{new Date().toLocaleTimeString()}</div>\n//       </div>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={originStation}\n//           onChange={(e) => setOriginStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n\n//       {/* Train Schedule Results */}\n//       {schedules.length > 0 && (\n//         <div className=\"results-container\">\n//           <h3>Available Train Schedules</h3>\n//           <table className=\"schedules-table\">\n//             <thead>\n//               <tr>\n//                 <th>Train ID</th>\n//                 <th>Origin</th>\n//                 <th>Destination</th>\n//                 <th>Departure Time</th>\n//                 <th>Arrival Time</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {schedules.map((schedule) => (\n//                 <tr key={schedule.ScheduleID}>\n//                   <td>{schedule.TrainID}</td>\n//                   <td>{schedule.OriginStation}</td>\n//                   <td>{schedule.DestinationStation}</td>\n//                   <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                   <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [originStation, setOriginStation] = useState(\"\");\n  const [destinationStation, setDestinationStation] = useState(\"\");\n  const [travelDate, setTravelDate] = useState(\"\");\n  const [schedules, setSchedules] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [trainDetails, setTrainDetails] = useState(null); // Train details\n\n  // Fetch available stations\n  useEffect(() => {\n    const fetchStations = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/api/stations\");\n        setStations(response.data.stations);\n      } catch (err) {\n        console.error(\"Error fetching stations:\", err);\n      }\n    };\n    fetchStations();\n  }, []);\n\n  // Handle Search Train Schedules\n  const handleSearch = async () => {\n    if (!originStation || !destinationStation || !travelDate) {\n      setError(\"Please select all fields.\");\n      return;\n    }\n    setError(\"\");\n    try {\n      const response = await axios.get(\"http://localhost:3000/api/mainPage/train-schedules\", {\n        params: {\n          originStation,\n          destinationStation,\n          travelDate\n        }\n      });\n      setSchedules(response.data.trainSchedules);\n    } catch (err) {\n      console.error(\"Error fetching train schedules:\", err);\n      setError(\"Failed to fetch train schedules. Try again later.\");\n    }\n  };\n\n  // Fetch Train Details\n  const fetchTrainDetails = async trainID => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/mainPage/trains/${trainID}/details`);\n      setTrainDetails(response.data); // Set train details\n    } catch (err) {\n      console.error(\"Error fetching train details:\", err);\n      setError(\"Failed to fetch train details. Try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Railway Reservation System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: new Date().toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Train\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: originStation,\n        onChange: e => setOriginStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Source Station--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: destinationStation,\n        onChange: e => setDestinationStation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Destination Station--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this), stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: station.StationName,\n          children: station.StationName\n        }, station.StationID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: travelDate,\n        onChange: e => setTravelDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this), schedules.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Train Schedules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"schedules-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Train ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: schedules.map(schedule => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.TrainID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.OriginStation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.DestinationStation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(schedule.DepartureDateTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(schedule.ArrivalDateTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"details-button\",\n                onClick: () => fetchTrainDetails(schedule.TrainID),\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 19\n            }, this)]\n          }, schedule.ScheduleID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 9\n    }, this), trainDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"train-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Train Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Train ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 14\n        }, this), \" \", trainDetails.TrainID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fare:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 14\n        }, this), \" $\", trainDetails.Fare]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Stops:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: trainDetails.Stops.map((stop, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [stop.StationName, \" - Arrival:\", \" \", new Date(stop.ArrivalDateTime).toLocaleString(), \", Departure:\", \" \", new Date(stop.DepartureDateTime).toLocaleString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: trainDetails.trainStops[0].Stops.map((stop, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: stop.StationName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(stop.ArrivalDateTime).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(stop.DepartureDateTime).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", stop.BaseFare.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 7\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"PDLBJRDaqpKeeItGcMFyYej0NUo=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MainPage","_s","stations","setStations","originStation","setOriginStation","destinationStation","setDestinationStation","travelDate","setTravelDate","schedules","setSchedules","error","setError","trainDetails","setTrainDetails","fetchStations","response","get","data","err","console","handleSearch","params","trainSchedules","fetchTrainDetails","trainID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","Date","toLocaleTimeString","value","onChange","e","target","map","station","StationName","StationID","type","onClick","length","schedule","TrainID","OriginStation","DestinationStation","DepartureDateTime","toLocaleString","ArrivalDateTime","ScheduleID","Fare","Stops","stop","index","trainStops","idx","BaseFare","toFixed","_c","$RefreshReg$"],"sources":["/Users/pavanmadamsetty/Documents/DBDS/railway-booking-frontend/src/pages/MainPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch stations from the backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchStations();\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div id=\"real-time-clock\"></div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n\n//         <button className=\"search-button\">Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\"; // Import the CSS file for styling\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations from backend API\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Train Search Container */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={sourceStation}\n//           onChange={(e) => setSourceStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input type=\"date\" placeholder=\"Select Date\" />\n//         <button className=\"search-button\">Search</button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations\n//   const fetchStations = async () => {\n//     try {\n//       const response = await axiosInstance.get(\"/stations\");\n//       setStations(response.data.stations);\n//     } catch (err) {\n//       console.error(\"Error fetching stations:\", err);\n//       setError(\"Failed to load stations. Please try again.\");\n//     }\n//   };\n\n//   // Real-time clock\n//   useEffect(() => {\n//     fetchStations();\n//     const interval = setInterval(() => {\n//       const now = new Date();\n//       setTime(now.toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Fetch train schedules\n//   const handleSearch = async () => {\n//     if (!sourceStation || !destinationStation || !travelDate) {\n//       setError(\"Please fill all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear error\n\n//     try {\n//       const response = await axiosInstance.get(\"/train-schedules\", {\n//         params: {\n//           originStation: sourceStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       setSchedules(response.data.trainSchedules);\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"No train schedules available.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       {/* Header */}\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       {/* Search Form */}\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>Search</button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n\n//       {/* Display Schedules */}\n//       {schedules.length > 0 && (\n//         <div className=\"schedules-table\">\n//           <h2>Available Train Schedules</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Train ID</th>\n//                 <th>Transit Line</th>\n//                 <th>Departure Time</th>\n//                 <th>Arrival Time</th>\n//                 <th>Travel Time</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {schedules.map((schedule) => (\n//                 <tr key={schedule.ScheduleID}>\n//                   <td>{schedule.TrainID}</td>\n//                   <td>{schedule.TransitLineName}</td>\n//                   <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                   <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                   <td>{schedule.TravelTime}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import axiosInstance from \"../utils/axiosInstance\";\n// import \"../styles/MainPage.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [sourceStation, setSourceStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [time, setTime] = useState(\"\");\n\n//   // Fetch stations\n//   useEffect(() => {\n//     const fetchStations = async () => {\n//       try {\n//         const response = await axiosInstance.get(\"/stations\");\n//         setStations(response.data.stations);\n//       } catch (err) {\n//         console.error(\"Error fetching stations:\", err);\n//         setError(\"Failed to load stations.\");\n//       }\n//     };\n//     fetchStations();\n\n//     // Real-time clock\n//     const interval = setInterval(() => {\n//       setTime(new Date().toLocaleTimeString());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const handleSearch = async () => {\n//     if (!sourceStation || !destinationStation || !travelDate) {\n//       setError(\"Please select all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear any previous errors\n  \n//     try {\n//       const response = await axiosInstance.get(\"/mainPage/train-schedules\", {\n//         params: {\n//           sourceStation,\n//           destinationStation,\n//           travelDate,\n//         },\n//       });\n//       console.log(\"Train Schedules:\", response.data.schedules);\n//       // Here you can set state to display the schedules in a table\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"Failed to fetch train schedules.\");\n//     }\n//   };\n  \n\n//   return (\n//     <div className=\"main-page\">\n//       <header className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-actions\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"real-time-clock\">{time}</div>\n//       </header>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select value={sourceStation} onChange={(e) => setSourceStation(e.target.value)}>\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select value={destinationStation} onChange={(e) => setDestinationStation(e.target.value)}>\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"../styles.css\";\n\n// const MainPage = () => {\n//   const [stations, setStations] = useState([]);\n//   const [originStation, setOriginStation] = useState(\"\");\n//   const [destinationStation, setDestinationStation] = useState(\"\");\n//   const [travelDate, setTravelDate] = useState(\"\");\n//   const [schedules, setSchedules] = useState([]);\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch available stations\n//   useEffect(() => {\n//     const fetchStations = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:3000/api/stations\");\n//         setStations(response.data.stations);\n//       } catch (err) {\n//         console.error(\"Error fetching stations:\", err);\n//       }\n//     };\n//     fetchStations();\n//   }, []);\n\n//   // Handle Search Train Schedules\n//   const handleSearch = async () => {\n//     if (!originStation || !destinationStation || !travelDate) {\n//       setError(\"Please select all fields.\");\n//       return;\n//     }\n//     setError(\"\"); // Clear any previous errors\n\n//     try {\n//       const response = await axios.get(\n//         \"http://localhost:3000/api/mainPage/train-schedules\",\n//         {\n//           params: {\n//             originStation,\n//             destinationStation,\n//             travelDate,\n//           },\n//         }\n//       );\n//       setSchedules(response.data.trainSchedules);\n//     } catch (err) {\n//       console.error(\"Error fetching train schedules:\", err);\n//       setError(\"Failed to fetch train schedules. Try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"main-page\">\n//       <div className=\"header\">\n//         <h1>Railway Reservation System</h1>\n//         <div className=\"header-links\">\n//           <a href=\"/login\">Sign In</a>\n//           <a href=\"/signup\">Sign Up</a>\n//         </div>\n//         <div className=\"time\">{new Date().toLocaleTimeString()}</div>\n//       </div>\n\n//       <div className=\"search-container\">\n//         <h2>Search Train</h2>\n//         <select\n//           value={originStation}\n//           onChange={(e) => setOriginStation(e.target.value)}\n//         >\n//           <option value=\"\">--Source Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <select\n//           value={destinationStation}\n//           onChange={(e) => setDestinationStation(e.target.value)}\n//         >\n//           <option value=\"\">--Destination Station--</option>\n//           {stations.map((station) => (\n//             <option key={station.StationID} value={station.StationName}>\n//               {station.StationName}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"date\"\n//           value={travelDate}\n//           onChange={(e) => setTravelDate(e.target.value)}\n//         />\n\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n//         {error && <p className=\"error\">{error}</p>}\n//       </div>\n\n//       {/* Train Schedule Results */}\n//       {schedules.length > 0 && (\n//         <div className=\"results-container\">\n//           <h3>Available Train Schedules</h3>\n//           <table className=\"schedules-table\">\n//             <thead>\n//               <tr>\n//                 <th>Train ID</th>\n//                 <th>Origin</th>\n//                 <th>Destination</th>\n//                 <th>Departure Time</th>\n//                 <th>Arrival Time</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {schedules.map((schedule) => (\n//                 <tr key={schedule.ScheduleID}>\n//                   <td>{schedule.TrainID}</td>\n//                   <td>{schedule.OriginStation}</td>\n//                   <td>{schedule.DestinationStation}</td>\n//                   <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n//                   <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MainPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles.css\";\n\nconst MainPage = () => {\n  const [stations, setStations] = useState([]);\n  const [originStation, setOriginStation] = useState(\"\");\n  const [destinationStation, setDestinationStation] = useState(\"\");\n  const [travelDate, setTravelDate] = useState(\"\");\n  const [schedules, setSchedules] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [trainDetails, setTrainDetails] = useState(null); // Train details\n\n  // Fetch available stations\n  useEffect(() => {\n    const fetchStations = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/api/stations\");\n        setStations(response.data.stations);\n      } catch (err) {\n        console.error(\"Error fetching stations:\", err);\n      }\n    };\n    fetchStations();\n  }, []);\n\n  // Handle Search Train Schedules\n  const handleSearch = async () => {\n    if (!originStation || !destinationStation || !travelDate) {\n      setError(\"Please select all fields.\");\n      return;\n    }\n    setError(\"\");\n\n    try {\n      const response = await axios.get(\n        \"http://localhost:3000/api/mainPage/train-schedules\",\n        {\n          params: { originStation, destinationStation, travelDate },\n        }\n      );\n      setSchedules(response.data.trainSchedules);\n    } catch (err) {\n      console.error(\"Error fetching train schedules:\", err);\n      setError(\"Failed to fetch train schedules. Try again later.\");\n    }\n  };\n\n  // Fetch Train Details\n  const fetchTrainDetails = async (trainID) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3000/api/mainPage/trains/${trainID}/details`\n      );\n      setTrainDetails(response.data); // Set train details\n    } catch (err) {\n      console.error(\"Error fetching train details:\", err);\n      setError(\"Failed to fetch train details. Try again later.\");\n    }\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"header\">\n        <h1>Railway Reservation System</h1>\n        <div className=\"header-links\">\n          <a href=\"/login\">Sign In</a>\n          <a href=\"/signup\">Sign Up</a>\n        </div>\n        <div className=\"time\">{new Date().toLocaleTimeString()}</div>\n      </div>\n\n      <div className=\"search-container\">\n        <h2>Search Train</h2>\n        <select\n          value={originStation}\n          onChange={(e) => setOriginStation(e.target.value)}\n        >\n          <option value=\"\">--Source Station--</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n\n        <select\n          value={destinationStation}\n          onChange={(e) => setDestinationStation(e.target.value)}\n        >\n          <option value=\"\">--Destination Station--</option>\n          {stations.map((station) => (\n            <option key={station.StationID} value={station.StationName}>\n              {station.StationName}\n            </option>\n          ))}\n        </select>\n\n        <input\n          type=\"date\"\n          value={travelDate}\n          onChange={(e) => setTravelDate(e.target.value)}\n        />\n\n        <button className=\"search-button\" onClick={handleSearch}>\n          Search\n        </button>\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n\n      {/* Train Schedule Results */}\n      {schedules.length > 0 && (\n        <div className=\"results-container\">\n          <h3>Available Train Schedules</h3>\n          <table className=\"schedules-table\">\n            <thead>\n              <tr>\n                <th>Train ID</th>\n                <th>Origin</th>\n                <th>Destination</th>\n                <th>Departure Time</th>\n                <th>Arrival Time</th>\n                <th>Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              {schedules.map((schedule) => (\n                <tr key={schedule.ScheduleID}>\n                  <td>{schedule.TrainID}</td>\n                  <td>{schedule.OriginStation}</td>\n                  <td>{schedule.DestinationStation}</td>\n                  <td>{new Date(schedule.DepartureDateTime).toLocaleString()}</td>\n                  <td>{new Date(schedule.ArrivalDateTime).toLocaleString()}</td>\n                  <td>\n                    <button\n                      className=\"details-button\"\n                      onClick={() => fetchTrainDetails(schedule.TrainID)}\n                    >\n                      View Details\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {/* Train Details */}\n      {trainDetails && (\n        <div className=\"train-details\">\n          <h3>Train Details</h3>\n          <p><strong>Train ID:</strong> {trainDetails.TrainID}</p>\n          <p><strong>Fare:</strong> ${trainDetails.Fare}</p>\n          <h4>Stops:</h4>\n          <ul>\n            {trainDetails.Stops.map((stop, index) => (\n              <li key={index}>\n                {stop.StationName} - Arrival:{\" \"}\n                {new Date(stop.ArrivalDateTime).toLocaleString()}, Departure:{\" \"}\n                {new Date(stop.DepartureDateTime).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n          <tbody>\n        {trainDetails.trainStops[0].Stops.map((stop, idx) => (\n    <tr key={idx}>\n      <td>{stop.StationName}</td>\n      <td>{new Date(stop.ArrivalDateTime).toLocaleString()}</td>\n      <td>{new Date(stop.DepartureDateTime).toLocaleString()}</td>\n      <td>${stop.BaseFare.toFixed(2)}</td>\n    </tr>\n  ))}\n</tbody>\n\n        </div>\n        \n      )}\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}